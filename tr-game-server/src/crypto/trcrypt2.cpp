/*
 *  trcrypt2.cpp
 *  tr-game-server
 *
 *  Created by Markus Mannel on 02.06.11.
 *  Copyright 2011 Overheat. All rights reserved.
 *
 */

#include "trcrypt2.h"

using namespace tr::crypto;

uint8_t CTRCrypt2::UnknownCryptTable1_BAE6D0[] =
{
	0x88,0x6A,0x3F,0x24,0xD3,0x08,0xA3,0x85,0x2E,0x8A,0x19,0x13,0x44,0x73,0x70,0x03,0xD9,0xD5,0x16,0x92,0x1B,0xFB,0x79,0x89,0xA6,0x0B,0x31,0xD1,0xAC,0xB5,0xDF,0x98
	,0xDB,0x72,0xFD,0x2F,0xB7,0xDF,0x1A,0xD0,0xED,0xAF,0xE1,0xB8,0x96,0x7E,0x26,0x6A,0x45,0x90,0x7C,0xBA,0x99,0x7F,0x2C,0xF1,0x47,0x99,0xA1,0x24,0xF7,0x6C,0x91,0xB3
	,0xE2,0xF2,0x01,0x08,0x16,0xFC,0x8E,0x85,0xD8,0x20,0x69,0x63,0x69,0x4E,0x57,0x71,0xA3,0xFE,0x58,0xA4,0x7E,0x3D,0x93,0xF4,0x8F,0x74,0x95,0x0D,0x58,0xB6,0x8E,0x72
	,0x58,0xCD,0x8B,0x71,0xEE,0x4A,0x15,0x82,0x1D,0xA4,0x54,0x7B,0xB5,0x59,0x5A,0xC2,0x39,0xD5,0x30,0x9C,0x13,0x60,0xF2,0x2A,0x23,0xB0,0xD1,0xC5,0xF0,0x85,0x60,0x28
	,0x18,0x79,0x41,0xCA,0xEF,0x38,0xDB,0xB8,0xB0,0xDC,0x79,0x8E,0x0E,0x18,0x3A,0x60,0x8B,0x0E,0x9E,0x6C,0x3E,0x8A,0x1E,0xB0,0xC1,0x77,0x15,0xD7,0x27,0x4B,0x31,0xBD
	,0xDA,0x2F,0xAF,0x78,0x60,0x5C,0x60,0x55,0xF3,0x25,0x55,0xE6,0x94,0xAB,0x55,0xAA,0x62,0x98,0x48,0x57,0x40,0x14,0xE8,0x63,0x6A,0x39,0xCA,0x55,0xB6,0x10,0xAB,0x2A
	,0x34,0x5C,0xCC,0xB4,0xCE,0xE8,0x41,0x11,0xAF,0x86,0x54,0xA1,0x93,0xE9,0x72,0x7C,0x11,0x14,0xEE,0xB3,0x2A,0xBC,0x6F,0x63,0x5D,0xC5,0xA9,0x2B,0xF6,0x31,0x18,0x74
	,0x16,0x3E,0x5C,0xCE,0x1E,0x93,0x87,0x9B,0x33,0xBA,0xD6,0xAF,0x5C,0xCF,0x24,0x6C,0x81,0x53,0x32,0x7A,0x77,0x86,0x95,0x28,0x98,0x48,0x8F,0x3B,0xAF,0xB9,0x4B,0x6B
	,0x1B,0xE8,0xBF,0xC4,0x93,0x21,0x28,0x66,0xCC,0x09,0xD8,0x61,0x91,0xA9,0x21,0xFB,0x60,0xAC,0x7C,0x48,0x32,0x80,0xEC,0x5D,0x5D,0x5D,0x84,0xEF,0xB1,0x75,0x85,0xE9
	,0x02,0x23,0x26,0xDC,0x88,0x1B,0x65,0xEB,0x81,0x3E,0x89,0x23,0xC5,0xAC,0x96,0xD3,0xF3,0x6F,0x6D,0x0F,0x39,0x42,0xF4,0x83,0x82,0x44,0x0B,0x2E,0x04,0x20,0x84,0xA4
	,0x4A,0xF0,0xC8,0x69,0x5E,0x9B,0x1F,0x9E,0x42,0x68,0xC6,0x21,0x9A,0x6C,0xE9,0xF6,0x61,0x9C,0x0C,0x67,0xF0,0x88,0xD3,0xAB,0xD2,0xA0,0x51,0x6A,0x68,0x2F,0x54,0xD8
	,0x28,0xA7,0x0F,0x96,0xA3,0x33,0x51,0xAB,0x6C,0x0B,0xEF,0x6E,0xE4,0x3B,0x7A,0x13,0x50,0xF0,0x3B,0xBA,0x98,0x2A,0xFB,0x7E,0x1D,0x65,0xF1,0xA1,0x76,0x01,0xAF,0x39
	,0x3E,0x59,0xCA,0x66,0x88,0x0E,0x43,0x82,0x19,0x86,0xEE,0x8C,0xB4,0x9F,0x6F,0x45,0xC3,0xA5,0x84,0x7D,0xBE,0x5E,0x8B,0x3B,0xD8,0x75,0x6F,0xE0,0x73,0x20,0xC1,0x85
	,0x9F,0x44,0x1A,0x40,0xA6,0x6A,0xC1,0x56,0x62,0xAA,0xD3,0x4E,0x06,0x77,0x3F,0x36,0x72,0xDF,0xFE,0x1B,0x3D,0x02,0x9B,0x42,0x24,0xD7,0xD0,0x37,0x48,0x12,0x0A,0xD0
	,0xD3,0xEA,0x0F,0xDB,0x9B,0xC0,0xF1,0x49,0xC9,0x72,0x53,0x07,0x7B,0x1B,0x99,0x80,0xD8,0x79,0xD4,0x25,0xF7,0xDE,0xE8,0xF6,0x1A,0x50,0xFE,0xE3,0x3B,0x4C,0x79,0xB6
	,0xBD,0xE0,0x6C,0x97,0xBA,0x06,0xC0,0x04,0xB6,0x4F,0xA9,0xC1,0xC4,0x60,0x9F,0x40,0xC2,0x9E,0x5C,0x5E,0x63,0x24,0x6A,0x19,0xAF,0x6F,0xFB,0x68,0xB5,0x53,0x6C,0x3E
	,0xEB,0xB2,0x39,0x13,0x6F,0xEC,0x52,0x3B,0x1F,0x51,0xFC,0x6D,0x2C,0x95,0x30,0x9B,0x44,0x45,0x81,0xCC,0x09,0xBD,0x5E,0xAF,0x04,0xD0,0xE3,0xBE,0xFD,0x4A,0x33,0xDE
	,0x07,0x28,0x0F,0x66,0xB3,0x4B,0x2E,0x19,0x57,0xA8,0xCB,0xC0,0x0F,0x74,0xC8,0x45,0x39,0x5F,0x0B,0xD2,0xDB,0xFB,0xD3,0xB9,0xBD,0xC0,0x79,0x55,0x0A,0x32,0x60,0x1A
	,0xC6,0x00,0xA1,0xD6,0x79,0x72,0x2C,0x40,0xFE,0x25,0x9F,0x67,0xCC,0xA3,0x1F,0xFB,0xF8,0xE9,0xA5,0x8E,0xF8,0x22,0x32,0xDB,0xDF,0x16,0x75,0x3C,0x15,0x6B,0x61,0xFD
	,0xC8,0x1E,0x50,0x2F,0xAB,0x52,0x05,0xAD,0xFA,0xB5,0x3D,0x32,0x60,0x87,0x23,0xFD,0x48,0x7B,0x31,0x53,0x82,0xDF,0x00,0x3E,0xBB,0x57,0x5C,0x9E,0xA0,0x8C,0x6F,0xCA
	,0x2E,0x56,0x87,0x1A,0xDB,0x69,0x17,0xDF,0xF6,0xA8,0x42,0xD5,0xC3,0xFF,0x7E,0x28,0xC6,0x32,0x67,0xAC,0x73,0x55,0x4F,0x8C,0xB0,0x27,0x5B,0x69,0xC8,0x58,0xCA,0xBB
	,0x5D,0xA3,0xFF,0xE1,0xA0,0x11,0xF0,0xB8,0x98,0x3D,0xFA,0x10,0xB8,0x83,0x21,0xFD,0x6C,0xB5,0xFC,0x4A,0x5B,0xD3,0xD1,0x2D,0x79,0xE4,0x53,0x9A,0x65,0x45,0xF8,0xB6
	,0xBC,0x49,0x8E,0xD2,0x90,0x97,0xFB,0x4B,0xDA,0xF2,0xDD,0xE1,0x33,0x7E,0xCB,0xA4,0x41,0x13,0xFB,0x62,0xE8,0xC6,0xE4,0xCE,0xDA,0xCA,0x20,0xEF,0x01,0x4C,0x77,0x36
	,0xFE,0x9E,0x7E,0xD0,0xB4,0x1F,0xF1,0x2B,0x4D,0xDA,0xDB,0x95,0x98,0x91,0x90,0xAE,0x71,0x8E,0xAD,0xEA,0xA0,0xD5,0x93,0x6B,0xD0,0xD1,0x8E,0xD0,0xE0,0x25,0xC7,0xAF
	,0x2F,0x5B,0x3C,0x8E,0xB7,0x94,0x75,0x8E,0xFB,0xE2,0xF6,0x8F,0x64,0x2B,0x12,0xF2,0x12,0xB8,0x88,0x88,0x1C,0xF0,0x0D,0x90,0xA0,0x5E,0xAD,0x4F,0x1C,0xC3,0x8F,0x68
	,0x91,0xF1,0xCF,0xD1,0xAD,0xC1,0xA8,0xB3,0x18,0x22,0x2F,0x2F,0x77,0x17,0x0E,0xBE,0xFE,0x2D,0x75,0xEA,0xA1,0x1F,0x02,0x8B,0x0F,0xCC,0xA0,0xE5,0xE8,0x74,0x6F,0xB5
	,0xD6,0xF3,0xAC,0x18,0x99,0xE2,0x89,0xCE,0xE0,0x4F,0xA8,0xB4,0xB7,0xE0,0x13,0xFD,0x81,0x3B,0xC4,0x7C,0xD9,0xA8,0xAD,0xD2,0x66,0xA2,0x5F,0x16,0x05,0x77,0x95,0x80
	,0x14,0x73,0xCC,0x93,0x77,0x14,0x1A,0x21,0x65,0x20,0xAD,0xE6,0x86,0xFA,0xB5,0x77,0xF5,0x42,0x54,0xC7,0xCF,0x35,0x9D,0xFB,0x0C,0xAF,0xCD,0xEB,0xA0,0x89,0x3E,0x7B
	,0xD3,0x1B,0x41,0xD6,0x49,0x7E,0x1E,0xAE,0x2D,0x0E,0x25,0x00,0x5E,0xB3,0x71,0x20,0xBB,0x00,0x68,0x22,0xAF,0xE0,0xB8,0x57,0x9B,0x36,0x64,0x24,0x1E,0xB9,0x09,0xF0
	,0x1D,0x91,0x63,0x55,0xAA,0xA6,0xDF,0x59,0x89,0x43,0xC1,0x78,0x7F,0x53,0x5A,0xD9,0xA2,0x5B,0x7D,0x20,0xC5,0xB9,0xE5,0x02,0x76,0x03,0x26,0x83,0xA9,0xCF,0x95,0x62
	,0x68,0x19,0xC8,0x11,0x41,0x4A,0x73,0x4E,0xCA,0x2D,0x47,0xB3,0x4A,0xA9,0x14,0x7B,0x52,0x00,0x51,0x1B,0x15,0x29,0x53,0x9A,0x3F,0x57,0x0F,0xD6,0xE4,0xC6,0x9B,0xBC
	,0x76,0xA4,0x60,0x2B,0x00,0x74,0xE6,0x81,0xB5,0x6F,0xBA,0x08,0x1F,0xE9,0x1B,0x57,0x6B,0xEC,0x96,0xF2,0x15,0xD9,0x0D,0x2A,0x21,0x65,0x63,0xB6,0xB6,0xF9,0xB9,0xE7
	,0x2E,0x05,0x34,0xFF,0x64,0x56,0x85,0xC5,0x5D,0x2D,0xB0,0x53,0xA1,0x8F,0x9F,0xA9,0x99,0x47,0xBA,0x08,0x6A,0x07,0x85,0x6E,0xE9,0x70,0x7A,0x4B,0x44,0x29,0xB3,0xB5
	,0x2E,0x09,0x75,0xDB,0x23,0x26,0x19,0xC4,0xB0,0xA6,0x6E,0xAD,0x7D,0xDF,0xA7,0x49,0xB8,0x60,0xEE,0x9C,0x66,0xB2,0xED,0x8F,0x71,0x8C,0xAA,0xEC,0xFF,0x17,0x9A,0x69
	,0x6C,0x52,0x64,0x56,0xE1,0x9E,0xB1,0xC2,0xA5,0x02,0x36,0x19,0x29,0x4C,0x09,0x75,0x40,0x13,0x59,0xA0,0x3E,0x3A,0x18,0xE4,0x9A,0x98,0x54,0x3F,0x65,0x9D,0x42,0x5B
	,0xD6,0xE4,0x8F,0x6B,0xD6,0x3F,0xF7,0x99,0x07,0x9C,0xD2,0xA1,0xF5,0x30,0xE8,0xEF,0xE6,0x38,0x2D,0x4D,0xC1,0x5D,0x25,0xF0,0x86,0x20,0xDD,0x4C,0x26,0xEB,0x70,0x84
	,0xC6,0xE9,0x82,0x63,0x5E,0xCC,0x1E,0x02,0x3F,0x6B,0x68,0x09,0xC9,0xEF,0xBA,0x3E,0x14,0x18,0x97,0x3C,0xA1,0x70,0x6A,0x6B,0x84,0x35,0x7F,0x68,0x86,0xE2,0xA0,0x52
	,0x05,0x53,0x9C,0xB7,0x37,0x07,0x50,0xAA,0x1C,0x84,0x07,0x3E,0x5C,0xAE,0xDE,0x7F,0xEC,0x44,0x7D,0x8E,0xB8,0xF2,0x16,0x57,0x37,0xDA,0x3A,0xB0,0x0D,0x0C,0x50,0xF0
	,0x04,0x1F,0x1C,0xF0,0xFF,0xB3,0x00,0x02,0x1A,0xF5,0x0C,0xAE,0xB2,0x74,0xB5,0x3C,0x58,0x7A,0x83,0x25,0xBD,0x21,0x09,0xDC,0xF9,0x13,0x91,0xD1,0xF6,0x2F,0xA9,0x7C
	,0x73,0x47,0x32,0x94,0x01,0x47,0xF5,0x22,0x81,0xE5,0xE5,0x3A,0xDC,0xDA,0xC2,0x37,0x34,0x76,0xB5,0xC8,0xA7,0xDD,0xF3,0x9A,0x46,0x61,0x44,0xA9,0x0E,0x03,0xD0,0x0F
	,0x3E,0xC7,0xC8,0xEC,0x41,0x1E,0x75,0xA4,0x99,0xCD,0x38,0xE2,0x2F,0x0E,0xEA,0x3B,0xA1,0xBB,0x80,0x32,0x31,0xB3,0x3E,0x18,0x38,0x8B,0x54,0x4E,0x08,0xB9,0x6D,0x4F
	,0x03,0x0D,0x42,0x6F,0xBF,0x04,0x0A,0xF6,0x90,0x12,0xB8,0x2C,0x79,0x7C,0x97,0x24,0x72,0xB0,0x79,0x56,0xAF,0x89,0xAF,0xBC,0x1F,0x77,0x9A,0xDE,0x10,0x08,0x93,0xD9
	,0x12,0xAE,0x8B,0xB3,0x2E,0x3F,0xCF,0xDC,0x1F,0x72,0x12,0x55,0x24,0x71,0x6B,0x2E,0xE6,0xDD,0x1A,0x50,0x87,0xCD,0x84,0x9F,0x18,0x47,0x58,0x7A,0x17,0xDA,0x08,0x74
	,0xBC,0x9A,0x9F,0xBC,0x8C,0x7D,0x4B,0xE9,0x3A,0xEC,0x7A,0xEC,0xFA,0x1D,0x85,0xDB,0x66,0x43,0x09,0x63,0xD2,0xC3,0x64,0xC4,0x47,0x18,0x1C,0xEF,0x08,0xD9,0x15,0x32
	,0x37,0x3B,0x43,0xDD,0x16,0xBA,0xC2,0x24,0x43,0x4D,0xA1,0x12,0x51,0xC4,0x65,0x2A,0x02,0x00,0x94,0x50,0xDD,0xE4,0x3A,0x13,0x9E,0xF8,0xDF,0x71,0x55,0x4E,0x31,0x10
	,0xD6,0x77,0xAC,0x81,0x9B,0x19,0x11,0x5F,0xF1,0x56,0x35,0x04,0x6B,0xC7,0xA3,0xD7,0x3B,0x18,0x11,0x3C,0x09,0xA5,0x24,0x59,0xED,0xE6,0x8F,0xF2,0xFA,0xFB,0xF1,0x97
	,0x2C,0xBF,0xBA,0x9E,0x6E,0x3C,0x15,0x1E,0x70,0x45,0xE3,0x86,0xB1,0x6F,0xE9,0xEA,0x0A,0x5E,0x0E,0x86,0xB3,0x2A,0x3E,0x5A,0x1C,0xE7,0x1F,0x77,0xFA,0x06,0x3D,0x4E
	,0xB9,0xDC,0x65,0x29,0x0F,0x1D,0xE7,0x99,0xD6,0x89,0x3E,0x80,0x25,0xC8,0x66,0x52,0x78,0xC9,0x4C,0x2E,0x6A,0xB3,0x10,0x9C,0xBA,0x0E,0x15,0xC6,0x78,0xEA,0xE2,0x94
	,0x53,0x3C,0xFC,0xA5,0xF4,0x2D,0x0A,0x1E,0xA7,0x4E,0xF7,0xF2,0x3D,0x2B,0x1D,0x36,0x0F,0x26,0x39,0x19,0x60,0x79,0xC2,0x19,0x08,0xA7,0x23,0x52,0xB6,0x12,0x13,0xF7
	,0x6E,0xFE,0xAD,0xEB,0x66,0x1F,0xC3,0xEA,0x95,0x45,0xBC,0xE3,0x83,0xC8,0x7B,0xA6,0xD1,0x37,0x7F,0xB1,0x28,0xFF,0x8C,0x01,0xEF,0xDD,0x32,0xC3,0xA5,0x5A,0x6C,0xBE
	,0x85,0x21,0x58,0x65,0x02,0x98,0xAB,0x68,0x0F,0xA5,0xCE,0xEE,0x3B,0x95,0x2F,0xDB,0xAD,0x7D,0xEF,0x2A,0x84,0x2F,0x6E,0x5B,0x28,0xB6,0x21,0x15,0x70,0x61,0x07,0x29
	,0x75,0x47,0xDD,0xEC,0x10,0x15,0x9F,0x61,0x30,0xA8,0xCC,0x13,0x96,0xBD,0x61,0xEB,0x1E,0xFE,0x34,0x03,0xCF,0x63,0x03,0xAA,0x90,0x5C,0x73,0xB5,0x39,0xA2,0x70,0x4C
	,0x0B,0x9E,0x9E,0xD5,0x14,0xDE,0xAA,0xCB,0xBC,0x86,0xCC,0xEE,0xA7,0x2C,0x62,0x60,0xAB,0x5C,0xAB,0x9C,0x6E,0x84,0xF3,0xB2,0xAF,0x1E,0x8B,0x64,0xCA,0xF0,0xBD,0x19
	,0xB9,0x69,0x23,0xA0,0x50,0xBB,0x5A,0x65,0x32,0x5A,0x68,0x40,0xB3,0xB4,0x2A,0x3C,0xD5,0xE9,0x9E,0x31,0xF7,0xB8,0x21,0xC0,0x19,0x0B,0x54,0x9B,0x99,0xA0,0x5F,0x87
	,0x7E,0x99,0xF7,0x95,0xA8,0x7D,0x3D,0x62,0x9A,0x88,0x37,0xF8,0x77,0x2D,0xE3,0x97,0x5F,0x93,0xED,0x11,0x81,0x12,0x68,0x16,0x29,0x88,0x35,0x0E,0xD6,0x1F,0xE6,0xC7
	,0xA1,0xDF,0xDE,0x96,0x99,0xBA,0x58,0x78,0xA5,0x84,0xF5,0x57,0x63,0x72,0x22,0x1B,0xFF,0xC3,0x83,0x9B,0x96,0x46,0xC2,0x1A,0xEB,0x0A,0xB3,0xCD,0x54,0x30,0x2E,0x53
	,0xE4,0x48,0xD9,0x8F,0x28,0x31,0xBC,0x6D,0xEF,0xF2,0xEB,0x58,0xEA,0xFF,0xC6,0x34,0x61,0xED,0x28,0xFE,0x73,0x3C,0x7C,0xEE,0xD9,0x14,0x4A,0x5D,0xE3,0xB7,0x64,0xE8
	,0x14,0x5D,0x10,0x42,0xE0,0x13,0x3E,0x20,0xB6,0xE2,0xEE,0x45,0xEA,0xAB,0xAA,0xA3,0x15,0x4F,0x6C,0xDB,0xD0,0x4F,0xCB,0xFA,0x42,0xF4,0x42,0xC7,0xB5,0xBB,0x6A,0xEF
	,0x1D,0x3B,0x4F,0x65,0x05,0x21,0xCD,0x41,0x9E,0x79,0x1E,0xD8,0xC7,0x4D,0x85,0x86,0x6A,0x47,0x4B,0xE4,0x50,0x62,0x81,0x3D,0xF2,0xA1,0x62,0xCF,0x46,0x26,0x8D,0x5B
	,0xA0,0x83,0x88,0xFC,0xA3,0xB6,0xC7,0xC1,0xC3,0x24,0x15,0x7F,0x92,0x74,0xCB,0x69,0x0B,0x8A,0x84,0x47,0x85,0xB2,0x92,0x56,0x00,0xBF,0x5B,0x09,0x9D,0x48,0x19,0xAD
	,0x74,0xB1,0x62,0x14,0x00,0x0E,0x82,0x23,0x2A,0x8D,0x42,0x58,0xEA,0xF5,0x55,0x0C,0x3E,0xF4,0xAD,0x1D,0x61,0x70,0x3F,0x23,0x92,0xF0,0x72,0x33,0x41,0x7E,0x93,0x8D
	,0xF1,0xEC,0x5F,0xD6,0xDB,0x3B,0x22,0x6C,0x59,0x37,0xDE,0x7C,0x60,0x74,0xEE,0xCB,0xA7,0xF2,0x85,0x40,0x6E,0x32,0x77,0xCE,0x84,0x80,0x07,0xA6,0x9E,0x50,0xF8,0x19
	,0x55,0xD8,0xEF,0xE8,0x35,0x97,0xD9,0x61,0xAA,0xA7,0x69,0xA9,0xC2,0x06,0x0C,0xC5,0xFC,0xAB,0x04,0x5A,0xDC,0xCA,0x0B,0x80,0x2E,0x7A,0x44,0x9E,0x84,0x34,0x45,0xC3
	,0x05,0x67,0xD5,0xFD,0xC9,0x9E,0x1E,0x0E,0xD3,0xDB,0x73,0xDB,0xCD,0x88,0x55,0x10,0x79,0xDA,0x5F,0x67,0x40,0x43,0x67,0xE3,0x65,0x34,0xC4,0xC5,0xD8,0x38,0x3E,0x71
	,0x9E,0xF8,0x28,0x3D,0x20,0xFF,0x6D,0xF1,0xE7,0x21,0x3E,0x15,0x4A,0x3D,0xB0,0x8F,0x2B,0x9F,0xE3,0xE6,0xF7,0xAD,0x83,0xDB,0x68,0x5A,0x3D,0xE9,0xF7,0x40,0x81,0x94
	,0x1C,0x26,0x4C,0xF6,0x34,0x29,0x69,0x94,0xF7,0x20,0x15,0x41,0xF7,0xD4,0x02,0x76,0x2E,0x6B,0xF4,0xBC,0x68,0x00,0xA2,0xD4,0x71,0x24,0x08,0xD4,0x6A,0xF4,0x20,0x33
	,0xB7,0xD4,0xB7,0x43,0xAF,0x61,0x00,0x50,0x2E,0xF6,0x39,0x1E,0x46,0x45,0x24,0x97,0x74,0x4F,0x21,0x14,0x40,0x88,0x8B,0xBF,0x1D,0xFC,0x95,0x4D,0xAF,0x91,0xB5,0x96
	,0xD3,0xDD,0xF4,0x70,0x45,0x2F,0xA0,0x66,0xEC,0x09,0xBC,0xBF,0x85,0x97,0xBD,0x03,0xD0,0x6D,0xAC,0x7F,0x04,0x85,0xCB,0x31,0xB3,0x27,0xEB,0x96,0x41,0x39,0xFD,0x55
	,0xE6,0x47,0x25,0xDA,0x9A,0x0A,0xCA,0xAB,0x25,0x78,0x50,0x28,0xF4,0x29,0x04,0x53,0xDA,0x86,0x2C,0x0A,0xFB,0x6D,0xB6,0xE9,0x62,0x14,0xDC,0x68,0x00,0x69,0x48,0xD7
	,0xA4,0xC0,0x0E,0x68,0xEE,0x8D,0xA1,0x27,0xA2,0xFE,0x3F,0x4F,0x8C,0xAD,0x87,0xE8,0x06,0xE0,0x8C,0xB5,0xB6,0xD6,0xF4,0x7A,0x7C,0x1E,0xCE,0xAA,0xEC,0x5F,0x37,0xD3
	,0x99,0xA3,0x78,0xCE,0x42,0x2A,0x6B,0x40,0x35,0x9E,0xFE,0x20,0xB9,0x85,0xF3,0xD9,0xAB,0xD7,0x39,0xEE,0x8B,0x4E,0x12,0x3B,0xF7,0xFA,0xC9,0x1D,0x56,0x18,0x6D,0x4B
	,0x31,0x66,0xA3,0x26,0xB2,0x97,0xE3,0xEA,0x74,0xFA,0x6E,0x3A,0x32,0x43,0x5B,0xDD,0xF7,0xE7,0x41,0x68,0xFB,0x20,0x78,0xCA,0x4E,0xF5,0x0A,0xFB,0x97,0xB3,0xFE,0xD8
	,0xAC,0x56,0x40,0x45,0x27,0x95,0x48,0xBA,0x3A,0x3A,0x53,0x55,0x87,0x8D,0x83,0x20,0xB7,0xA9,0x6B,0xFE,0x4B,0x95,0x96,0xD0,0xBC,0x67,0xA8,0x55,0x58,0x9A,0x15,0xA1
	,0x63,0x29,0xA9,0xCC,0x33,0xDB,0xE1,0x99,0x56,0x4A,0x2A,0xA6,0xF9,0x25,0x31,0x3F,0x1C,0x7E,0xF4,0x5E,0x7C,0x31,0x29,0x90,0x02,0xE8,0xF8,0xFD,0x70,0x2F,0x27,0x04
	,0x5C,0x15,0xBB,0x80,0xE3,0x2C,0x28,0x05,0x48,0x15,0xC1,0x95,0x22,0x6D,0xC6,0xE4,0x3F,0x13,0xC1,0x48,0xDC,0x86,0x0F,0xC7,0xEE,0xC9,0xF9,0x07,0x0F,0x1F,0x04,0x41
	,0xA4,0x79,0x47,0x40,0x17,0x6E,0x88,0x5D,0xEB,0x51,0x5F,0x32,0xD1,0xC0,0x9B,0xD5,0x8F,0xC1,0xBC,0xF2,0x64,0x35,0x11,0x41,0x34,0x78,0x7B,0x25,0x60,0x9C,0x2A,0x60
	,0xA3,0xE8,0xF8,0xDF,0x1B,0x6C,0x63,0x1F,0xC2,0xB4,0x12,0x0E,0x9E,0x32,0xE1,0x02,0xD1,0x4F,0x66,0xAF,0x15,0x81,0xD1,0xCA,0xE0,0x95,0x23,0x6B,0xE1,0x92,0x3E,0x33
	,0x62,0x0B,0x24,0x3B,0x22,0xB9,0xBE,0xEE,0x0E,0xA2,0xB2,0x85,0x99,0x0D,0xBA,0xE6,0x8C,0x0C,0x72,0xDE,0x28,0xF7,0xA2,0x2D,0x45,0x78,0x12,0xD0,0xFD,0x94,0xB7,0x95
	,0x62,0x08,0x7D,0x64,0xF0,0xF5,0xCC,0xE7,0x6F,0xA3,0x49,0x54,0xFA,0x48,0x7D,0x87,0x27,0xFD,0x9D,0xC3,0x1E,0x8D,0x3E,0xF3,0x41,0x63,0x47,0x0A,0x74,0xFF,0x2E,0x99
	,0xAB,0x6E,0x6F,0x3A,0x37,0xFD,0xF8,0xF4,0x60,0xDC,0x12,0xA8,0xF8,0xDD,0xEB,0xA1,0x4C,0xE1,0x1B,0x99,0x0D,0x6B,0x6E,0xDB,0x10,0x55,0x7B,0xC6,0x37,0x2C,0x67,0x6D
	,0x3B,0xD4,0x65,0x27,0x04,0xE8,0xD0,0xDC,0xC7,0x0D,0x29,0xF1,0xA3,0xFF,0x00,0xCC,0x92,0x0F,0x39,0xB5,0x0B,0xED,0x0F,0x69,0xFB,0x9F,0x7B,0x66,0x9C,0x7D,0xDB,0xCE
	,0x0B,0xCF,0x91,0xA0,0xA3,0x5E,0x15,0xD9,0x88,0x2F,0x13,0xBB,0x24,0xAD,0x5B,0x51,0xBF,0x79,0x94,0x7B,0xEB,0xD6,0x3B,0x76,0xB3,0x2E,0x39,0x37,0x79,0x59,0x11,0xCC
	,0x97,0xE2,0x26,0x80,0x2D,0x31,0x2E,0xF4,0xA7,0xAD,0x42,0x68,0x3B,0x2B,0x6A,0xC6,0xCC,0x4C,0x75,0x12,0x1C,0xF1,0x2E,0x78,0x37,0x42,0x12,0x6A,0xE7,0x51,0x92,0xB7
	,0xE6,0xBB,0xA1,0x06,0x50,0x63,0xFB,0x4B,0x18,0x10,0x6B,0x1A,0xFA,0xED,0xCA,0x11,0xD8,0xBD,0x25,0x3D,0xC9,0xC3,0xE1,0xE2,0x59,0x16,0x42,0x44,0x86,0x13,0x12,0x0A
	,0x6E,0xEC,0x0C,0xD9,0x2A,0xEA,0xAB,0xD5,0x4E,0x67,0xAF,0x64,0x5F,0xA8,0x86,0xDA,0x88,0xE9,0xBF,0xBE,0xFE,0xC3,0xE4,0x64,0x57,0x80,0xBC,0x9D,0x86,0xC0,0xF7,0xF0
	,0xF8,0x7B,0x78,0x60,0x4D,0x60,0x03,0x60,0x46,0x83,0xFD,0xD1,0xB0,0x1F,0x38,0xF6,0x04,0xAE,0x45,0x77,0xCC,0xFC,0x36,0xD7,0x33,0x6B,0x42,0x83,0x71,0xAB,0x1E,0xF0
	,0x87,0x41,0x80,0xB0,0x5F,0x5E,0x00,0x3C,0xBE,0x57,0xA0,0x77,0x24,0xAE,0xE8,0xBD,0x99,0x42,0x46,0x55,0x61,0x2E,0x58,0xBF,0x8F,0xF4,0x58,0x4E,0xA2,0xFD,0xDD,0xF2
	,0x38,0xEF,0x74,0xF4,0xC2,0xBD,0x89,0x87,0xC3,0xF9,0x66,0x53,0x74,0x8E,0xB3,0xC8,0x55,0xF2,0x75,0xB4,0xB9,0xD9,0xFC,0x46,0x61,0x26,0xEB,0x7A,0x84,0xDF,0x1D,0x8B
	,0x79,0x0E,0x6A,0x84,0xE2,0x95,0x5F,0x91,0x8E,0x59,0x6E,0x46,0x70,0x57,0xB4,0x20,0x91,0x55,0xD5,0x8C,0x4C,0xDE,0x02,0xC9,0xE1,0xAC,0x0B,0xB9,0xD0,0x05,0x82,0xBB
	,0x48,0x62,0xA8,0x11,0x9E,0xA9,0x74,0x75,0xB6,0x19,0x7F,0xB7,0x09,0xDC,0xA9,0xE0,0xA1,0x09,0x2D,0x66,0x33,0x46,0x32,0xC4,0x02,0x1F,0x5A,0xE8,0x8C,0xBE,0xF0,0x09
	,0x25,0xA0,0x99,0x4A,0x10,0xFE,0x6E,0x1D,0x1D,0x3D,0xB9,0x1A,0xDF,0xA4,0xA5,0x0B,0x0F,0xF2,0x86,0xA1,0x69,0xF1,0x68,0x28,0x83,0xDA,0xB7,0xDC,0xFE,0x06,0x39,0x57
	,0x9B,0xCE,0xE2,0xA1,0x52,0x7F,0xCD,0x4F,0x01,0x5E,0x11,0x50,0xFA,0x83,0x06,0xA7,0xC4,0xB5,0x02,0xA0,0x27,0xD0,0xE6,0x0D,0x27,0x8C,0xF8,0x9A,0x41,0x86,0x3F,0x77
	,0x06,0x4C,0x60,0xC3,0xB5,0x06,0xA8,0x61,0x28,0x7A,0x17,0xF0,0xE0,0x86,0xF5,0xC0,0xAA,0x58,0x60,0x00,0x62,0x7D,0xDC,0x30,0xD7,0x9E,0xE6,0x11,0x63,0xEA,0x38,0x23
	,0x94,0xDD,0xC2,0x53,0x34,0x16,0xC2,0xC2,0x56,0xEE,0xCB,0xBB,0xDE,0xB6,0xBC,0x90,0xA1,0x7D,0xFC,0xEB,0x76,0x1D,0x59,0xCE,0x09,0xE4,0x05,0x6F,0x88,0x01,0x7C,0x4B
	,0x3D,0x0A,0x72,0x39,0x24,0x7C,0x92,0x7C,0x5F,0x72,0xE3,0x86,0xB9,0x9D,0x4D,0x72,0xB4,0x5B,0xC1,0x1A,0xFC,0xB8,0x9E,0xD3,0x78,0x55,0x54,0xED,0xB5,0xA5,0xFC,0x08
	,0xD3,0x7C,0x3D,0xD8,0xC4,0x0F,0xAD,0x4D,0x5E,0xEF,0x50,0x1E,0xF8,0xE6,0x61,0xB1,0xD9,0x14,0x85,0xA2,0x3C,0x13,0x51,0x6C,0xE7,0xC7,0xD5,0x6F,0xC4,0x4E,0xE1,0x56
	,0xCE,0xBF,0x2A,0x36,0x37,0xC8,0xC6,0xDD,0x34,0x32,0x9A,0xD7,0x12,0x82,0x63,0x92,0x8E,0xFA,0x0E,0x67,0xE0,0x00,0x60,0x40,0x37,0xCE,0x39,0x3A,0xCF,0xF5,0xFA,0xD3
	,0x37,0x77,0xC2,0xAB,0x1B,0x2D,0xC5,0x5A,0x9E,0x67,0xB0,0x5C,0x42,0x37,0xA3,0x4F,0x40,0x27,0x82,0xD3,0xBE,0x9B,0xBC,0x99,0x9D,0x8E,0x11,0xD5,0x15,0x73,0x0F,0xBF
	,0x7E,0x1C,0x2D,0xD6,0x7B,0xC4,0x00,0xC7,0x6B,0x1B,0x8C,0xB7,0x45,0x90,0xA1,0x21,0xBE,0xB1,0x6E,0xB2,0xB4,0x6E,0x36,0x6A,0x2F,0xAB,0x48,0x57,0x79,0x6E,0x94,0xBC
	,0xD2,0x76,0xA3,0xC6,0xC8,0xC2,0x49,0x65,0xEE,0xF8,0x0F,0x53,0x7D,0xDE,0x8D,0x46,0x1D,0x0A,0x73,0xD5,0xC6,0x4D,0xD0,0x4C,0xDB,0xBB,0x39,0x29,0x50,0x46,0xBA,0xA9
	,0xE8,0x26,0x95,0xAC,0x04,0xE3,0x5E,0xBE,0xF0,0xD5,0xFA,0xA1,0x9A,0x51,0x2D,0x6A,0xE2,0x8C,0xEF,0x63,0x22,0xEE,0x86,0x9A,0xB8,0xC2,0x89,0xC0,0xF6,0x2E,0x24,0x43
	,0xAA,0x03,0x1E,0xA5,0xA4,0xD0,0xF2,0x9C,0xBA,0x61,0xC0,0x83,0x4D,0x6A,0xE9,0x9B,0x50,0x15,0xE5,0x8F,0xD6,0x5B,0x64,0xBA,0xF9,0xA2,0x26,0x28,0xE1,0x3A,0x3A,0xA7
	,0x86,0x95,0xA9,0x4B,0xE9,0x62,0x55,0xEF,0xD3,0xEF,0x2F,0xC7,0xDA,0xF7,0x52,0xF7,0x69,0x6F,0x04,0x3F,0x59,0x0A,0xFA,0x77,0x15,0xA9,0xE4,0x80,0x01,0x86,0xB0,0x87
	,0xAD,0xE6,0x09,0x9B,0x93,0xE5,0x3E,0x3B,0x5A,0xFD,0x90,0xE9,0x97,0xD7,0x34,0x9E,0xD9,0xB7,0xF0,0x2C,0x51,0x8B,0x2B,0x02,0x3A,0xAC,0xD5,0x96,0x7D,0xA6,0x7D,0x01
	,0xD6,0x3E,0xCF,0xD1,0x28,0x2D,0x7D,0x7C,0xCF,0x25,0x9F,0x1F,0x9B,0xB8,0xF2,0xAD,0x72,0xB4,0xD6,0x5A,0x4C,0xF5,0x88,0x5A,0x71,0xAC,0x29,0xE0,0xE6,0xA5,0x19,0xE0
	,0xFD,0xAC,0xB0,0x47,0x9B,0xFA,0x93,0xED,0x8D,0xC4,0xD3,0xE8,0xCC,0x57,0x3B,0x28,0x29,0x66,0xD5,0xF8,0x28,0x2E,0x13,0x79,0x91,0x01,0x5F,0x78,0x55,0x60,0x75,0xED
	,0x44,0x0E,0x96,0xF7,0x8C,0x5E,0xD3,0xE3,0xD4,0x6D,0x05,0x15,0xBA,0x6D,0xF4,0x88,0x25,0x61,0xA1,0x03,0xBD,0xF0,0x64,0x05,0x15,0x9E,0xEB,0xC3,0xA2,0x57,0x90,0x3C
	,0xEC,0x1A,0x27,0x97,0x2A,0x07,0x3A,0xA9,0x9B,0x6D,0x3F,0x1B,0xF5,0x21,0x63,0x1E,0xFB,0x66,0x9C,0xF5,0x19,0xF3,0xDC,0x26,0x28,0xD9,0x33,0x75,0xF5,0xFD,0x55,0xB1
	,0x82,0x34,0x56,0x03,0xBB,0x3C,0xBA,0x8A,0x11,0x77,0x51,0x28,0xF8,0xD9,0x0A,0xC2,0x67,0x51,0xCC,0xAB,0x5F,0x92,0xAD,0xCC,0x51,0x17,0xE8,0x4D,0x8E,0xDC,0x30,0x38
	,0x62,0x58,0x9D,0x37,0x91,0xF9,0x20,0x93,0xC2,0x90,0x7A,0xEA,0xCE,0x7B,0x3E,0xFB,0x64,0xCE,0x21,0x51,0x32,0xBE,0x4F,0x77,0x7E,0xE3,0xB6,0xA8,0x46,0x3D,0x29,0xC3
	,0x69,0x53,0xDE,0x48,0x80,0xE6,0x13,0x64,0x10,0x08,0xAE,0xA2,0x24,0xB2,0x6D,0xDD,0xFD,0x2D,0x85,0x69,0x66,0x21,0x07,0x09,0x0A,0x46,0x9A,0xB3,0xDD,0xC0,0x45,0x64
	,0xCF,0xDE,0x6C,0x58,0xAE,0xC8,0x20,0x1C,0xDD,0xF7,0xBE,0x5B,0x40,0x8D,0x58,0x1B,0x7F,0x01,0xD2,0xCC,0xBB,0xE3,0xB4,0x6B,0x7E,0x6A,0xA2,0xDD,0x45,0xFF,0x59,0x3A
	,0x44,0x0A,0x35,0x3E,0xD5,0xCD,0xB4,0xBC,0xA8,0xCE,0xEA,0x72,0xBB,0x84,0x64,0xFA,0xAE,0x12,0x66,0x8D,0x47,0x6F,0x3C,0xBF,0x63,0xE4,0x9B,0xD2,0x9E,0x5D,0x2F,0x54
	,0x1B,0x77,0xC2,0xAE,0x70,0x63,0x4E,0xF6,0x8D,0x0D,0x0E,0x74,0x57,0x13,0x5B,0xE7,0x71,0x16,0x72,0xF8,0x5D,0x7D,0x53,0xAF,0x08,0xCB,0x40,0x40,0xCC,0xE2,0xB4,0x4E
	,0x6A,0x46,0xD2,0x34,0x84,0xAF,0x15,0x01,0x28,0x04,0xB0,0xE1,0x1D,0x3A,0x98,0x95,0xB4,0x9F,0xB8,0x06,0x48,0xA0,0x6E,0xCE,0x82,0x3B,0x3F,0x6F,0x82,0xAB,0x20,0x35
	,0x4B,0x1D,0x1A,0x01,0xF8,0x27,0x72,0x27,0xB1,0x60,0x15,0x61,0xDC,0x3F,0x93,0xE7,0x2B,0x79,0x3A,0xBB,0xBD,0x25,0x45,0x34,0xE1,0x39,0x88,0xA0,0x4B,0x79,0xCE,0x51
	,0xB7,0xC9,0x32,0x2F,0xC9,0xBA,0x1F,0xA0,0x7E,0xC8,0x1C,0xE0,0xF6,0xD1,0xC7,0xBC,0xC3,0x11,0x01,0xCF,0xC7,0xAA,0xE8,0xA1,0x49,0x87,0x90,0x1A,0x9A,0xBD,0x4F,0xD4
	,0xCB,0xDE,0xDA,0xD0,0x38,0xDA,0x0A,0xD5,0x2A,0xC3,0x39,0x03,0x67,0x36,0x91,0xC6,0x7C,0x31,0xF9,0x8D,0x4F,0x2B,0xB1,0xE0,0xB7,0x59,0x9E,0xF7,0x3A,0xBB,0xF5,0x43
	,0xFF,0x19,0xD5,0xF2,0x9C,0x45,0xD9,0x27,0x2C,0x22,0x97,0xBF,0x2A,0xFC,0xE6,0x15,0x71,0xFC,0x91,0x0F,0x25,0x15,0x94,0x9B,0x61,0x93,0xE5,0xFA,0xEB,0x9C,0xB6,0xCE
	,0x59,0x64,0xA8,0xC2,0xD1,0xA8,0xBA,0x12,0x5E,0x07,0xC1,0xB6,0x0C,0x6A,0x05,0xE3,0x65,0x50,0xD2,0x10,0x42,0xA4,0x03,0xCB,0x0E,0x6E,0xEC,0xE0,0x3B,0xDB,0x98,0x16
	,0xBE,0xA0,0x98,0x4C,0x64,0xE9,0x78,0x32,0x32,0x95,0x1F,0x9F,0xDF,0x92,0xD3,0xE0,0x2B,0x34,0xA0,0xD3,0x1E,0xF2,0x71,0x89,0x41,0x74,0x0A,0x1B,0x8C,0x34,0xA3,0x4B
	,0x20,0x71,0xBE,0xC5,0xD8,0x32,0x76,0xC3,0x8D,0x9F,0x35,0xDF,0x2E,0x2F,0x99,0x9B,0x47,0x6F,0x0B,0xE6,0x1D,0xF1,0xE3,0x0F,0x54,0xDA,0x4C,0xE5,0x91,0xD8,0xDA,0x1E
	,0xCF,0x79,0x62,0xCE,0x6F,0x7E,0x3E,0xCD,0x66,0xB1,0x18,0x16,0x05,0x1D,0x2C,0xFD,0xC5,0xD2,0x8F,0x84,0x99,0x22,0xFB,0xF6,0x57,0xF3,0x23,0xF5,0x23,0x76,0x32,0xA6
	,0x31,0x35,0xA8,0x93,0x02,0xCD,0xCC,0x56,0x62,0x81,0xF0,0xAC,0xB5,0xEB,0x75,0x5A,0x97,0x36,0x16,0x6E,0xCC,0x73,0xD2,0x88,0x92,0x62,0x96,0xDE,0xD0,0x49,0xB9,0x81
	,0x1B,0x90,0x50,0x4C,0x14,0x56,0xC6,0x71,0xBD,0xC7,0xC6,0xE6,0x0A,0x14,0x7A,0x32,0x06,0xD0,0xE1,0x45,0x9A,0x7B,0xF2,0xC3,0xFD,0x53,0xAA,0xC9,0x00,0x0F,0xA8,0x62
	,0xE2,0xBF,0x25,0xBB,0xF6,0xD2,0xBD,0x35,0x05,0x69,0x12,0x71,0x22,0x02,0x04,0xB2,0x7C,0xCF,0xCB,0xB6,0x2B,0x9C,0x76,0xCD,0xC0,0x3E,0x11,0x53,0xD3,0xE3,0x40,0x16
	,0x60,0xBD,0xAB,0x38,0xF0,0xAD,0x47,0x25,0x9C,0x20,0x38,0xBA,0x76,0xCE,0x46,0xF7,0xC5,0xA1,0xAF,0x77,0x60,0x60,0x75,0x20,0x4E,0xFE,0xCB,0x85,0xD8,0x8D,0xE8,0x8A
	,0xB0,0xF9,0xAA,0x7A,0x7E,0xAA,0xF9,0x4C,0x5C,0xC2,0x48,0x19,0x8C,0x8A,0xFB,0x02,0xE4,0x6A,0xC3,0x01,0xF9,0xE1,0xEB,0xD6,0x69,0xF8,0xD4,0x90,0xA0,0xDE,0x5C,0xA6
	,0x2D,0x25,0x09,0x3F,0x9F,0xE6,0x08,0xC2,0x32,0x61,0x4E,0xB7,0x5B,0xE2,0x77,0xCE,0xE3,0xDF,0x8F,0x57,0xE6,0x72,0xC3,0x3A
};

uint8_t CTRCrypt2::InputK[0x40] = 
{
	0x5F,0x8B,0x85,0xB4,0xAF,0x2C,0x38,0xF7,0xB2,0xB2,0x05,0xCE,0x84,0x0A,0xB5,0x66,0xDC,0xA2,0x58,0xFC,0x89,0xD9,0xAB,0x37,0xAD,0xDA,0x93,0xC2,0x3B,0x8D,0x78,0x10,
	0xB8,0x78,0x54,0x92,0x2D,0x01,0x6D,0x80,0x4C,0xCF,0xF2,0x1D,0x14,0x8D,0xF4,0x30,0x7B,0x3C,0xF2,0x28,0x99,0xE2,0x0A,0xDF,0x43,0x77,0x79,0x58,0x77,0xDC,0x0C,0x5C
};

uint8_t CompareD[0x1018 + 0x10] =
{
	0xF2,0x32,0x1D,0x6E,0xBF,0xA7,0x6C,0x2F,0xB4,0x26,0x4B,0x0B,0x32,0x4A,0x65,0x6A,0x9C,0x12,0x83,0xF8,0x27,0x53,0xF7,0x4C,0x42,0x1A,0x88,0x47,0xF7,0x09,0xF3,0x86
	,0x2E,0x91,0xAB,0x94,0x39,0x9F,0x66,0xF9,0x25,0x26,0xCC,0x4C,0x8C,0x97,0xB2,0xEF,0x0A,0xC3,0xFE,0xEF,0x6F,0xCC,0xB2,0x6A,0xF2,0x1F,0x41,0x5F,0x7C,0xE3,0x9B,0x01
	,0x59,0x6A,0x23,0x09,0x00,0x3B,0xD8,0x1D,0x77,0x4A,0xA3,0xF5,0x48,0xF1,0x8B,0x6E,0xE7,0xD0,0xB7,0xBA,0x62,0x20,0x7C,0x21,0xE9,0xAE,0x78,0x3A,0x86,0xF3,0x88,0x68
	,0x5E,0xC6,0xCA,0x0C,0xBA,0x8F,0xCA,0x3F,0xB5,0xF1,0xEA,0xFE,0x6C,0x6E,0x08,0x9F,0x01,0x64,0x75,0x04,0xDA,0xA0,0x47,0x19,0x3D,0xC3,0x71,0x55,0x58,0x8D,0xE1,0xF8
	,0xB7,0x89,0xEB,0x80,0xBC,0x69,0x84,0x33,0x81,0xD0,0x7A,0x27,0xE8,0xA4,0xE8,0x5D,0xF6,0x35,0x54,0xD5,0x77,0xF4,0x28,0x57,0x02,0xE7,0x0E,0xDB,0x0D,0xCF,0x57,0x47
	,0xBC,0xED,0x16,0x15,0x74,0x3C,0x46,0x96,0x5F,0x53,0x87,0xA4,0x32,0xF3,0xC8,0xC6,0xBA,0x7A,0x4C,0xE9,0xC7,0x7D,0xC0,0x0E,0x16,0xE0,0x4C,0xE5,0x4B,0x4C,0x7B,0xBD
	,0x04,0x11,0xE7,0x3A,0xA2,0x3B,0x95,0xE8,0x7A,0x93,0xFE,0xD4,0xB0,0x26,0xF6,0x3C,0x5A,0x3C,0x8F,0xE4,0xE0,0xD4,0x7D,0xB4,0x5F,0x16,0xC5,0x64,0x3C,0x6A,0xC7,0x27
	,0x94,0xDB,0x91,0xA3,0x8A,0xD1,0xDD,0x00,0xB1,0x58,0x99,0x14,0x89,0xB0,0x90,0xE3,0x8D,0xD3,0x3C,0xB7,0x96,0x95,0xC5,0xBC,0xD0,0x3D,0x02,0xBD,0x54,0x82,0x6D,0xA6
	,0x70,0xD2,0x13,0xE1,0xEA,0x42,0xC8,0xE4,0x55,0x94,0x84,0x68,0x2A,0x98,0xD1,0x3D,0x39,0xE9,0x59,0xFC,0xB3,0x1E,0x51,0x5A,0xC4,0xF5,0xAF,0x30,0x02,0x7B,0x60,0x66
	,0x50,0x94,0x58,0x59,0x9B,0x26,0xD5,0xB9,0x17,0x8B,0x57,0x5E,0xCE,0x89,0xE3,0x34,0x92,0x80,0x5D,0x8C,0xCF,0x53,0xF1,0x96,0x52,0x92,0xBC,0x48,0x70,0x49,0xB2,0x89
	,0xD6,0x59,0x34,0xDF,0x6D,0xDF,0x58,0x03,0xA4,0x3B,0x8B,0x32,0xFF,0xA3,0x81,0x48,0xAD,0x78,0x0E,0x3D,0x89,0x9F,0x91,0x32,0x29,0x89,0x24,0x89,0xAC,0xFD,0xBB,0xB0
	,0x7D,0x5C,0x35,0x47,0x6E,0x42,0x07,0x25,0xED,0x33,0x54,0xB6,0x57,0xF5,0x52,0xBA,0x2E,0x1A,0x17,0xDB,0xB4,0x37,0xF2,0xBB,0xFF,0x99,0x6C,0x32,0xC8,0x56,0xF1,0x23
	,0x22,0x57,0x65,0x28,0x10,0x31,0xA1,0x1D,0xD6,0x04,0xE4,0xDE,0x0C,0x9E,0x23,0xB0,0x58,0x55,0xDB,0xC1,0xED,0x76,0x0F,0x6C,0x59,0x12,0xF3,0x68,0x31,0xB0,0x83,0xEB
	,0x17,0x11,0x38,0xEC,0x39,0xEF,0xBC,0xE7,0x82,0xCF,0x62,0x97,0x52,0xDD,0xCC,0x3A,0x01,0xDB,0x92,0x0C,0xB8,0x75,0xF2,0x67,0xC9,0xD1,0x03,0x4B,0xBD,0x84,0x65,0xC6
	,0xF1,0xA4,0x01,0xF9,0xFE,0x56,0x67,0x4F,0xFE,0xB6,0x4A,0x9A,0x7E,0x13,0xD5,0x25,0x69,0x67,0xA5,0x1A,0xB5,0x37,0x0B,0x5C,0x26,0xC6,0x49,0x45,0xEB,0xB9,0x11,0x82
	,0xA0,0xA3,0xE9,0x5F,0xCD,0x5D,0xAB,0x10,0xB3,0x28,0x49,0x81,0x46,0xC0,0xB0,0xAC,0x52,0x32,0x23,0x04,0x36,0x2B,0x09,0xCD,0x42,0xF9,0x4B,0x15,0x21,0x1F,0x63,0x8F
	,0x04,0x4E,0xCA,0xAD,0x6F,0x06,0x11,0x2E,0x1D,0x7D,0xC5,0x8C,0x08,0xCA,0x78,0xD5,0x00,0x67,0xFC,0xA6,0x6B,0xAB,0x3E,0x6F,0xF5,0xC4,0x8F,0xF2,0xDF,0x4F,0x16,0xDA
	,0x91,0x92,0x8C,0xEB,0xAB,0x0F,0x06,0x8B,0xAE,0x53,0xB8,0xE5,0x6B,0x52,0x41,0x5E,0xB1,0x5F,0x26,0xEE,0x2B,0x8E,0xBB,0xFC,0xE7,0x2A,0x29,0x3A,0x35,0xF4,0x5C,0x62
	,0x5C,0xD5,0x20,0xB6,0x65,0x02,0xFB,0xBE,0x9A,0xC3,0xD3,0xCB,0x16,0x1C,0x03,0xD4,0xB9,0xD3,0x4A,0xF9,0xD2,0x11,0xD0,0xDE,0xA1,0xA8,0x30,0x5C,0x40,0x18,0xA6,0xF4
	,0x6B,0xDB,0xF3,0x28,0x68,0x56,0xCA,0x83,0xEC,0x4E,0xB1,0x54,0x27,0x53,0x49,0xC7,0xB1,0xBB,0xBF,0x43,0x28,0xC3,0xBF,0xCB,0x46,0x70,0x6F,0xC9,0x09,0x93,0xCA,0xA4
	,0x99,0x32,0x67,0xB1,0x3E,0xB6,0x22,0xBC,0xEB,0x3D,0x42,0xA0,0x68,0xE4,0x03,0x8B,0x58,0x57,0x77,0x4A,0x7A,0xE8,0xFF,0x9D,0x24,0x22,0x50,0xB4,0xA9,0x2E,0x82,0x22
	,0x18,0xD0,0xE9,0xD2,0xEA,0xC1,0x29,0xEF,0xE1,0x3F,0xFB,0x61,0x99,0xD8,0x8E,0x48,0x1A,0x96,0x5E,0x41,0xAC,0x66,0x96,0x43,0x8C,0xEF,0x49,0x01,0xDA,0x6B,0x3A,0xCD
	,0x57,0x14,0x6F,0xEC,0xAB,0x3F,0x5B,0x09,0xD3,0xA5,0xCD,0x38,0xB5,0xB9,0x02,0x51,0x2B,0xC2,0xBC,0xAA,0x4E,0xC6,0x00,0xDF,0xC9,0xD6,0x20,0x3F,0xAE,0x48,0x03,0xEC
	,0xA2,0xCF,0xB0,0x73,0x06,0x0B,0x6E,0x76,0xB4,0x9F,0x5C,0xF9,0xAA,0x11,0x92,0x69,0x68,0x16,0xA9,0x3E,0xB6,0x2E,0x85,0x98,0x0E,0xB8,0x1C,0xDD,0xB9,0xCA,0x66,0x37
	,0x6F,0xF8,0x5C,0x23,0x3F,0x54,0x57,0xEE,0x2C,0x34,0x64,0xE8,0x79,0xF2,0x12,0xD9,0xD8,0x30,0xAC,0x8D,0xA9,0x79,0x0B,0x99,0x4C,0xEC,0x57,0x5F,0x0B,0x31,0x05,0xDB
	,0xFA,0x7E,0x51,0x3A,0xA8,0xD8,0x5C,0x71,0xAE,0x64,0x8F,0x7A,0x6E,0x4E,0x96,0xA4,0xF1,0x08,0xA2,0x38,0x3B,0x74,0x58,0xAE,0x88,0x17,0x2B,0x2C,0x90,0x5F,0x9F,0x84
	,0x91,0xF5,0x42,0xB1,0x38,0xFB,0x74,0xD9,0xA0,0x6C,0xBB,0x8B,0x05,0xC1,0x60,0x24,0x71,0x68,0x5B,0xC2,0x13,0x71,0xCC,0x7C,0xBE,0xB1,0x5F,0x1F,0x82,0xE8,0x77,0xF7
	,0x2C,0x7B,0x85,0xDD,0x75,0x16,0xDF,0xC2,0x94,0xA6,0xCE,0xE7,0xC1,0x9D,0x20,0x30,0x01,0xC2,0x13,0x0B,0xC5,0x6F,0xB0,0x6C,0x38,0xF8,0x6A,0x04,0x9E,0x91,0x98,0xBD
	,0xC0,0x83,0x30,0xE2,0x7E,0xD3,0xA5,0x61,0xB9,0xA4,0x37,0xCA,0x8F,0x13,0x60,0x1D,0x94,0x4D,0x93,0xD5,0x97,0x76,0x8A,0x74,0x67,0x9A,0x50,0x1C,0x30,0x67,0xB1,0x8B
	,0x3D,0x80,0xEC,0x80,0x80,0xBA,0xA5,0x9B,0x67,0x19,0xAD,0x2D,0x6A,0x4B,0x58,0xB9,0x1B,0x04,0x5F,0x3D,0xA7,0xBC,0xA1,0x76,0x58,0x2B,0x78,0x5E,0x49,0x9E,0x04,0x2B
	,0xAB,0x4F,0xBC,0x88,0x65,0x7E,0xAD,0x9F,0x8C,0x6A,0xD4,0x6E,0x04,0x88,0x7F,0xE9,0xC9,0xD0,0x60,0x80,0x24,0xE1,0xEA,0x57,0xE0,0x4A,0xBE,0x5D,0x07,0x40,0x8E,0x3D
	,0xAB,0x3A,0xD4,0x2C,0xEC,0xEE,0x01,0xA7,0xB4,0x6C,0x90,0x3E,0xA6,0x14,0xC6,0x29,0x4A,0x18,0x0B,0x39,0x3F,0x97,0x74,0xA2,0x05,0xD5,0xEA,0x35,0xC8,0x21,0x60,0x46
	,0xAD,0xFD,0x67,0x50,0x11,0x30,0x14,0xAD,0x41,0xB0,0x3A,0x9C,0x7E,0x9A,0x80,0x3A,0x12,0x34,0x81,0x0D,0xDF,0x53,0x54,0xD1,0x11,0x9D,0x85,0xB0,0x9D,0x89,0x66,0x49
	,0x61,0xE8,0xB2,0x76,0x45,0x2F,0xEB,0x79,0xE8,0x6D,0x66,0x88,0x86,0xA9,0x8F,0x65,0x44,0xD4,0xAC,0x6B,0xCE,0xBE,0xCF,0xF2,0x3F,0x38,0x20,0x18,0x19,0x4B,0xED,0xB7
	,0x7F,0xC3,0x88,0x2A,0x5C,0x28,0xB3,0x99,0x1D,0x36,0x48,0x66,0x3D,0x9D,0xC7,0x89,0x44,0xF3,0x2B,0x9A,0x1D,0xE4,0xEA,0xEA,0xDB,0x81,0xEB,0x8D,0x00,0x0D,0x67,0xE0
	,0x78,0xB2,0xF5,0xDE,0x56,0x54,0xCA,0x73,0x6E,0xA9,0xA7,0x3F,0xCE,0x05,0x9B,0x2E,0xBA,0x5F,0x2C,0x08,0x24,0x2F,0x01,0x9F,0xA6,0x29,0x45,0x9B,0x1D,0xB7,0xB0,0x9C
	,0x88,0x35,0x3C,0x7E,0x5F,0x42,0x5C,0x23,0x90,0x4F,0x2C,0xBC,0x74,0xFC,0xD5,0x43,0x6C,0xA2,0xDC,0x45,0x47,0x63,0x15,0x81,0x58,0x2D,0xA6,0x4C,0xF6,0xBA,0xF7,0xD1
	,0x7C,0x7B,0x1D,0xA9,0x0E,0x12,0xCA,0x88,0xD8,0x43,0xC0,0x2B,0xB8,0xB9,0x35,0x59,0x3F,0x98,0x6C,0x87,0xBE,0x31,0x8E,0x8D,0x74,0xF2,0x17,0x0E,0xC1,0x75,0x58,0x3B
	,0x82,0x2D,0x08,0xC5,0xE3,0xE0,0xB8,0x75,0x9F,0x6D,0x70,0xFF,0x18,0x9E,0x1B,0xA7,0x5D,0x88,0x5F,0x74,0xC8,0xC7,0xF7,0xE6,0xC6,0xE7,0x4C,0x6E,0x1D,0xA3,0xEC,0xF2
	,0xC4,0x14,0xE7,0xBD,0x1B,0xA3,0xB9,0x9A,0x26,0xCE,0xF4,0x19,0x53,0xAB,0x1A,0xD5,0x33,0xBA,0x81,0x36,0x8D,0x3E,0x8E,0x07,0xE9,0x0F,0x21,0x0A,0x84,0x1B,0x55,0x8F
	,0x10,0x7C,0x7F,0x1E,0xA1,0x3C,0x74,0x3B,0x40,0x99,0x4C,0xED,0x24,0x92,0xF4,0x7D,0x61,0xF2,0xA9,0xB7,0x6E,0x5B,0x53,0xEC,0x7A,0x94,0x37,0x23,0x73,0x94,0x67,0xFA
	,0xDF,0x63,0x0D,0x71,0x88,0x4D,0xA4,0x8D,0xB6,0x81,0xA1,0x12,0xAA,0xF9,0x41,0x60,0xFC,0xAA,0x93,0xE6,0xE7,0xC1,0x63,0x9F,0x26,0x03,0x75,0x20,0xD7,0xFE,0xE8,0x3D
	,0xE5,0xD8,0x01,0xEF,0x0C,0x77,0xA8,0xE4,0x33,0x80,0x40,0xAC,0x38,0x73,0x0A,0xA9,0x13,0x61,0x63,0x9F,0xC2,0x2B,0x2A,0x28,0xFE,0xF2,0xDB,0x45,0x31,0x41,0x34,0xF9
	,0xA0,0x8B,0x1C,0x12,0x0B,0x06,0xF7,0x07,0x4C,0x5E,0x26,0x45,0x75,0x34,0x07,0xAF,0xD3,0xA2,0x7C,0xFA,0xF4,0xF9,0xE0,0x7E,0x99,0x56,0x94,0xE7,0xA7,0x81,0x35,0x69
	,0x11,0xA7,0xE0,0x3C,0xEE,0xBC,0x36,0xBD,0xA5,0xA6,0x16,0x18,0xA5,0x1B,0x6F,0x73,0xE6,0x54,0x1F,0xB4,0x3F,0xA7,0x25,0xCD,0xB2,0x54,0x72,0x31,0x91,0xC2,0x67,0x16
	,0x6C,0x26,0x9E,0x5B,0x7C,0xF6,0x9F,0x44,0xEF,0xC6,0x19,0x20,0x78,0x03,0x2E,0x64,0x2B,0x10,0x16,0xF7,0x83,0xE1,0xE6,0x1B,0x6F,0x5B,0x1F,0xAC,0x36,0x50,0x21,0x6B
	,0xDC,0xC9,0xC0,0xE0,0x62,0x60,0xD4,0xCA,0x8F,0x6E,0x53,0xFB,0x8A,0xBA,0x33,0xBD,0x52,0xC5,0x5C,0x59,0xD7,0x24,0x65,0x01,0xB4,0x81,0xB0,0x2D,0x59,0xA3,0x70,0x53
	,0x61,0x99,0xAB,0x98,0x83,0x9B,0x5E,0x29,0x10,0xC5,0x4E,0x1B,0x50,0x55,0xCC,0xAB,0xD0,0x0F,0x57,0x50,0x18,0x20,0xCE,0x06,0xD5,0x54,0x3C,0xA0,0xB9,0xD8,0x35,0xB9
	,0x0E,0x19,0x2F,0xCF,0x3F,0x3C,0xB6,0x2E,0xA2,0x16,0xD8,0x06,0xD6,0x3B,0x91,0xD6,0x02,0x10,0x9B,0x74,0x81,0x55,0xA6,0xFE,0xD4,0x6A,0x0A,0x8B,0x2F,0xDA,0xC4,0x97
	,0x44,0x72,0xF2,0xCE,0xCF,0xD1,0xD8,0xC7,0x56,0xF2,0xB2,0x3E,0x4F,0xB9,0xCA,0x33,0x90,0x44,0xF5,0x85,0x82,0xD1,0x32,0x7E,0xF2,0x73,0xA7,0xB8,0xC7,0xC7,0xC1,0x86
	,0x89,0xFD,0x7F,0x77,0x44,0xD3,0x0F,0x48,0x47,0x43,0x8C,0x6A,0xC3,0xB3,0xCA,0x0B,0xF2,0x67,0xA1,0x96,0xC0,0xF0,0xFE,0xA7,0x63,0x08,0x19,0x7D,0x99,0x0D,0x03,0x55
	,0x88,0xE5,0x41,0xB6,0xD5,0xF2,0x92,0x3F,0xFF,0x50,0xD8,0x9C,0x04,0x89,0x93,0xAF,0x37,0xCF,0x0F,0xE1,0x28,0xDA,0x25,0x39,0x4E,0xE2,0xD4,0x8B,0x7B,0x05,0xA1,0x83
	,0xC3,0xCA,0xBB,0xC1,0x11,0x22,0x46,0x58,0xAD,0xAC,0x0A,0x98,0xFC,0x10,0xBD,0xCC,0x84,0x72,0x19,0x1A,0x6B,0x77,0x13,0xD0,0x27,0xAA,0x45,0x47,0xCF,0x2E,0xF2,0xD5
	,0x6B,0x76,0x67,0x0F,0x28,0xD7,0xFB,0x60,0x16,0x4C,0x44,0xF5,0xC1,0x60,0xDA,0xA0,0xB8,0xFB,0x6F,0x15,0x46,0x5C,0xB4,0x48,0x73,0xAB,0xA4,0x3A,0x9A,0x62,0xD3,0x35
	,0x4E,0x41,0x3C,0xD7,0x01,0x83,0x89,0x63,0x24,0x9A,0xB2,0x21,0xD6,0x34,0x98,0x76,0x6A,0x90,0xBF,0xCA,0xEC,0x0C,0x0A,0x13,0x47,0x98,0x44,0xD0,0x50,0x84,0xAF,0xE2
	,0x2D,0x5C,0x09,0xE4,0x26,0xF5,0x7B,0x74,0xC0,0xE6,0xB6,0xA9,0x46,0xAB,0xF8,0x08,0xA3,0x79,0x96,0x64,0x59,0x80,0x16,0xD9,0x00,0x2B,0x55,0xB0,0x54,0x31,0x92,0xD7
	,0x3A,0x9F,0xB3,0xCC,0xE0,0x8C,0x7C,0x84,0x71,0xEA,0x9C,0x5D,0xF4,0xCA,0xEE,0x18,0x3D,0x38,0x45,0x5C,0x65,0xF2,0xC9,0xB7,0xB5,0xDE,0x08,0x38,0xF7,0x8C,0x5A,0x73
	,0xBB,0x68,0xCC,0x57,0xE5,0x8D,0x67,0x6D,0xFE,0x2B,0xB8,0xE3,0x13,0xF7,0x17,0x1F,0xD9,0x27,0x9C,0xF6,0x05,0x88,0x90,0xF7,0x52,0x59,0xB1,0x2D,0x37,0xB9,0x8A,0x6C
	,0x7A,0xFA,0xA9,0x34,0x4E,0xC6,0x2A,0x98,0x90,0x09,0xE8,0x58,0x6C,0xE4,0x65,0x5E,0xE9,0x32,0xDE,0x0C,0xB3,0xDD,0x4B,0x8A,0x95,0x43,0x2F,0x37,0x19,0xC2,0xC5,0xF5
	,0xDA,0xF2,0xF5,0x48,0x2B,0xB5,0x99,0x1C,0x84,0x6F,0x2C,0x9C,0x23,0xDB,0x7B,0x2E,0x0B,0xA9,0x16,0xFA,0x0F,0x5D,0x35,0x60,0x8B,0xA6,0x64,0x84,0x13,0x7A,0xB7,0xB7
	,0x21,0xD4,0x5F,0x94,0x74,0xA7,0x38,0x26,0x8F,0x79,0x82,0x3F,0xD1,0xA6,0x21,0x5A,0x94,0xDE,0x19,0xCF,0x2C,0x8C,0x1D,0x65,0x92,0xB7,0x44,0x66,0xBB,0xB5,0x2B,0x1B
	,0x24,0x83,0xFA,0x83,0xC6,0xD2,0x9F,0x5D,0xEF,0x41,0x37,0x37,0xCC,0xEF,0xEB,0xB0,0x28,0xA2,0x29,0x4E,0x0D,0x3C,0x8E,0x9D,0x90,0x37,0x57,0xD4,0x96,0x7C,0x1B,0x75
	,0xB4,0x25,0xD6,0x3A,0x1A,0x27,0xDC,0xD7,0xEA,0xFD,0x5A,0x45,0x1F,0x3D,0x7C,0x79,0x02,0xF7,0xCF,0x31,0x58,0x29,0x66,0xDD,0x99,0x77,0x3A,0xD8,0x62,0x6A,0xBC,0xB6
	,0x14,0xB1,0x45,0xC8,0x29,0xCE,0x74,0x3B,0x7B,0x61,0xF3,0x18,0x37,0xF3,0x86,0xC4,0xA8,0x3B,0x69,0x42,0x15,0xE8,0xD9,0x23,0x72,0x97,0xE8,0x2E,0xE3,0x90,0x00,0x1D
	,0x3B,0xC6,0xC9,0x95,0xD2,0x42,0x37,0xD3,0xFE,0x76,0xEB,0xF4,0xC0,0x52,0x29,0x37,0x3E,0x4C,0xA4,0x44,0xBD,0xC0,0x18,0x44,0x3D,0x17,0xAB,0xA9,0x03,0xB5,0x78,0x13
	,0xEA,0xCA,0x5C,0xAE,0x4B,0x29,0xDD,0xA0,0x68,0xF5,0x5D,0x8B,0xAE,0x4D,0xCB,0x50,0xA1,0x53,0x07,0x40,0xA8,0x01,0xBB,0xD3,0x39,0x67,0x9C,0x14,0xF3,0x6C,0xE6,0x28
	,0xE5,0x0F,0x22,0x89,0xB5,0xB7,0x1F,0x2A,0xE4,0x54,0x3B,0x6F,0xEC,0xD9,0x41,0x49,0xE4,0xBC,0xA3,0xAD,0x31,0x71,0x49,0xBB,0x41,0x1F,0x18,0x36,0xF9,0x6B,0x55,0xAC
	,0xF5,0xBD,0x6E,0x19,0x7C,0x88,0xFA,0x8B,0xAC,0xC1,0x5D,0x5E,0x45,0xDB,0x8A,0x90,0xFC,0xFA,0x3A,0xD3,0x7E,0x29,0x9F,0xD8,0x24,0x0A,0x31,0xB3,0x23,0x38,0x05,0x9A
	,0xF8,0x81,0xF5,0x1E,0x71,0xCA,0xA7,0x57,0xED,0xAE,0x4F,0x1D,0x5B,0xCB,0x59,0xEA,0xB6,0x6C,0x91,0xA9,0xFB,0x47,0x03,0x57,0xD0,0x78,0x6E,0xE7,0x99,0x51,0xCB,0x36
	,0x7F,0xDA,0xC0,0xFC,0x7F,0x64,0x34,0xE9,0xC3,0x3B,0x01,0x42,0xFF,0x8E,0xFF,0x7D,0x19,0xFA,0x7D,0xE3,0x45,0x7D,0xC3,0xAF,0x09,0x12,0x89,0x04,0x80,0x2F,0x7A,0x6C
	,0xE1,0x32,0x15,0xCF,0x7F,0x7B,0x60,0x56,0x4D,0xBA,0x86,0xC6,0x92,0x15,0x43,0x53,0xFB,0xE6,0xF1,0x66,0x6B,0xD2,0x5D,0x51,0xB7,0xC1,0xCF,0x6C,0x3B,0x19,0x98,0xD6
	,0x55,0x5F,0x34,0x73,0x80,0x08,0xD2,0x8B,0xBB,0xE4,0x05,0xE4,0xB4,0x7D,0xF7,0xCF,0xCC,0x47,0x14,0x8B,0x7F,0x29,0xE6,0x5A,0x43,0x16,0x38,0xD9,0x31,0x4B,0xA3,0xF3
	,0x7F,0xC2,0x1E,0x89,0x8D,0x35,0x62,0xF4,0xB3,0xD8,0x40,0x90,0x4C,0xFD,0x8C,0x7E,0x44,0x0B,0xB2,0x73,0x46,0x96,0x17,0xA0,0xF9,0x3D,0x6B,0x06,0xA5,0xAB,0x69,0x2E
	,0x99,0x39,0x42,0xF1,0xD3,0xC2,0xC2,0xBE,0x3A,0xD2,0xC0,0xA2,0x63,0xB7,0x4F,0xB0,0xA7,0xAE,0x13,0xDA,0x1B,0xCD,0x4A,0x40,0xDA,0xC4,0x09,0x9B,0x75,0x26,0x73,0x37
	,0x42,0xDF,0x3E,0xDA,0xF8,0x7B,0x09,0x48,0x3E,0xF9,0xEF,0xA6,0x26,0x34,0xA0,0x97,0x04,0x72,0xC4,0x3E,0xC8,0xB4,0xDD,0xBA,0xA3,0x61,0x30,0x0F,0xF6,0x2C,0x8C,0xE2
	,0x32,0x19,0x50,0xC5,0xBE,0x2F,0x46,0xA6,0x98,0x01,0x86,0xB3,0x13,0x18,0x54,0xE3,0x56,0xCC,0x0C,0x5A,0x3F,0xA9,0x12,0x53,0x0B,0xBA,0xC9,0x0E,0x66,0x63,0x67,0xAA
	,0xB2,0x73,0x9A,0x51,0x27,0x99,0xD1,0x4C,0x26,0x64,0x35,0x75,0x9A,0x73,0x67,0x41,0xF2,0x51,0xCE,0x65,0x06,0xE4,0x5C,0x9A,0xAA,0x14,0xE9,0x0E,0xE7,0x93,0x93,0x2A
	,0x67,0x57,0xFA,0xA2,0x61,0xFF,0x66,0xD5,0x15,0x57,0x5A,0x80,0x8D,0xE9,0x7E,0x03,0xA8,0x62,0x73,0x66,0x7D,0x45,0x9E,0x0E,0x4C,0xA6,0x44,0x6A,0x92,0x40,0xD0,0xE7
	,0x06,0xD3,0x1C,0x9C,0xCD,0x42,0xE5,0x75,0xD0,0x2B,0xA1,0xCE,0xEE,0x5F,0x12,0xE3,0x6F,0x8C,0xDD,0x70,0xFF,0x5A,0xBC,0x2D,0xDB,0xE4,0x5F,0x94,0x56,0xBB,0xA0,0x40
	,0x38,0xBC,0x19,0xE9,0x8F,0x05,0x4C,0x3F,0x0B,0xF4,0xFA,0x9A,0x87,0xEF,0x21,0xDE,0xE2,0xFB,0x46,0x94,0x75,0xF8,0xAD,0xC5,0x67,0x1B,0x87,0xBC,0x61,0x08,0x36,0xF8
	,0x1C,0x9D,0xA5,0x4C,0x6D,0xD7,0x8F,0x16,0xF4,0xE6,0x2C,0x77,0x5E,0x8F,0x7D,0xD8,0xC5,0x07,0x0A,0x02,0x82,0x25,0x85,0xE8,0x52,0x8B,0x8C,0xE3,0xC4,0xA1,0xED,0x93
	,0xFE,0x92,0xBC,0x4C,0x0D,0x8E,0x50,0x05,0x52,0xB9,0xB4,0x83,0x6A,0x6F,0xF8,0x08,0x5F,0x2A,0xEB,0xC0,0xB1,0xF5,0x0B,0x72,0x95,0x66,0xD9,0xC9,0x0C,0x76,0xE8,0x3E
	,0x9B,0xD4,0xE7,0x91,0xD1,0xD8,0x01,0xB3,0xA6,0xA2,0x1C,0x50,0xBE,0x2F,0x53,0x0D,0x88,0x79,0xD4,0x4E,0xDF,0x7F,0x59,0x44,0x69,0x72,0x5F,0x2E,0x8F,0x45,0xCB,0x6D
	,0xD6,0x9E,0x35,0xF1,0x07,0xE4,0x26,0xAA,0x96,0x81,0x45,0x4B,0x4D,0xBC,0xD8,0x08,0x6E,0xCD,0xEA,0xC7,0xF5,0x8E,0x1B,0xCD,0xA3,0x12,0xBD,0xD9,0x3F,0xCF,0xCB,0x6B
	,0x6B,0xD6,0xFF,0x09,0x0A,0xA6,0xD1,0x64,0x37,0x83,0x01,0x9A,0x42,0x40,0xF4,0x48,0xB1,0x77,0xA2,0xA4,0x93,0x72,0x64,0x25,0x12,0x81,0x8D,0xA9,0x7C,0x96,0x98,0x08
	,0x7C,0xC4,0x6E,0xF2,0xB3,0xE4,0x98,0xCF,0x41,0x79,0x3F,0x94,0x02,0x92,0x3F,0x77,0x17,0x9A,0xFC,0xC6,0xF8,0xB1,0xEB,0xCB,0x36,0xAB,0x95,0xA5,0xDB,0x86,0x14,0xBA
	,0xDA,0x89,0x3F,0x8B,0x83,0xA5,0x73,0x88,0x8D,0x6E,0xF8,0x38,0xC5,0x05,0xE6,0xDB,0xE6,0xB2,0x63,0x4C,0x70,0x29,0x9A,0x8C,0xE7,0xF3,0xB6,0xDD,0xEC,0x12,0x4A,0x71
	,0x50,0x1C,0xE5,0xAA,0x78,0xDA,0x6C,0x37,0xB3,0x45,0x5D,0x0A,0x67,0x13,0xE4,0xE3,0x44,0x97,0x04,0x32,0x9C,0xBF,0x44,0x2A,0xE3,0xAF,0xF0,0x60,0x82,0xBF,0x80,0x81
	,0xB4,0x73,0x8B,0x68,0x3C,0xE8,0x41,0x34,0xAA,0x5F,0x1D,0xFC,0xE8,0x88,0x70,0xEF,0x9F,0x44,0x56,0xBE,0x07,0x5D,0x8D,0xB0,0x96,0xC8,0xC1,0xCF,0xD4,0x78,0x81,0x35
	,0xDF,0xF9,0x57,0xFE,0x4E,0xA4,0xBB,0x88,0xCA,0xCF,0x9D,0x8E,0x7B,0xCB,0xE9,0x1D,0x40,0x10,0xB1,0x1D,0x22,0xEF,0xEA,0x03,0x27,0x2C,0xC6,0x28,0xAD,0x23,0x1A,0x72
	,0x1C,0x6B,0xCA,0x97,0x88,0xBA,0x1E,0xD7,0x48,0xEC,0x01,0x5C,0x20,0x29,0x27,0xE4,0x76,0x16,0xA9,0xED,0x89,0xC3,0x27,0xD1,0xAA,0x5A,0x9D,0x39,0xEB,0x1E,0x71,0xDF
	,0xAA,0x52,0xDA,0x5B,0x31,0x46,0x90,0x98,0x97,0xF5,0xE5,0x9A,0x46,0x9F,0x58,0xF7,0x94,0x35,0x63,0x39,0xFE,0xF1,0xBD,0x0A,0x17,0xA1,0x7F,0xB3,0xF5,0xE2,0x63,0x97
	,0x25,0xEE,0xC7,0x70,0xFA,0x82,0xAF,0xC6,0x46,0x41,0x45,0x4A,0x9B,0xFA,0xAE,0xE7,0x16,0x77,0x17,0x50,0x28,0xF3,0x8E,0x88,0xED,0xBB,0x51,0x57,0x9E,0xC1,0x46,0xB2
	,0xAB,0xBA,0xF2,0xB8,0xA6,0xAD,0x15,0xAF,0xC2,0x45,0x28,0xFD,0xB2,0xC3,0x49,0x4A,0x50,0xD3,0x16,0x2C,0xAA,0xB4,0x95,0x60,0x78,0x53,0x52,0x92,0xF2,0x7D,0x46,0x8C
	,0xC4,0x17,0x16,0xC4,0x8C,0xCB,0x50,0x73,0xFB,0x0F,0xDB,0x87,0x33,0x51,0xA9,0x13,0xA3,0x06,0x1B,0x88,0x9C,0x73,0x6A,0x0B,0x86,0x98,0xE2,0x63,0xD8,0xC5,0xD5,0xBC
	,0xB8,0xA8,0xA8,0xC2,0xF0,0xCC,0x71,0x63,0xDC,0xCA,0x87,0x92,0xBD,0xC1,0xE1,0x90,0x17,0x5F,0x02,0x26,0x72,0xCE,0x66,0xE0,0x87,0xD1,0x8D,0xF4,0x1E,0xBE,0x49,0xDF
	,0x42,0x68,0xD8,0x93,0xD5,0xFD,0x30,0x0B,0x55,0xCC,0xD2,0xA5,0x2F,0x33,0xC8,0xCD,0xC5,0xCC,0x85,0x77,0xE5,0x56,0x72,0xA0,0x17,0xCB,0x4F,0xC7,0xE0,0x91,0xEF,0x45
	,0x91,0x61,0x1A,0x5B,0x0D,0x68,0xD5,0xBD,0xA8,0x1C,0x2C,0x24,0x61,0x89,0x67,0xD2,0x56,0x3D,0xFC,0x66,0xFC,0x3E,0x8E,0xE4,0x00,0xCF,0xAB,0xFC,0x49,0x5B,0xF8,0x49
	,0x8A,0x01,0x97,0x05,0x77,0xBF,0x7C,0xF2,0x5A,0xB5,0xB5,0x5A,0x37,0x48,0xBC,0x98,0xCE,0x48,0x34,0x0E,0xC8,0xDB,0x40,0x06,0xE3,0x68,0xFC,0xDE,0x85,0xA9,0x2E,0x1E
	,0x65,0x55,0x1B,0x9F,0x90,0x95,0x80,0xA4,0x93,0xAB,0xAE,0x4B,0x44,0xA2,0x30,0xE0,0xAB,0x12,0x61,0x98,0x74,0xD3,0x33,0x63,0x3E,0x9A,0xF2,0xEA,0x10,0x13,0x7C,0x5F
	,0xA7,0x91,0x40,0x35,0xD8,0x37,0xE8,0x09,0x5C,0x2B,0x12,0xE0,0xAD,0x2A,0xAF,0xDA,0xBE,0x5A,0x14,0x84,0x37,0x02,0xB5,0x26,0x42,0xB5,0x9A,0xAC,0xA8,0x19,0xBD,0xAD
	,0x4E,0xAD,0x2B,0x91,0x68,0xDC,0x63,0x20,0x0F,0xCF,0x8F,0x20,0x4F,0xED,0x8F,0xAE,0x33,0x47,0x1C,0xF0,0x6C,0x60,0x48,0x6A,0x77,0x7B,0x09,0x31,0x28,0x63,0xE5,0x4B
	,0xD6,0xF4,0xDC,0x00,0x90,0xAE,0xAD,0xFB,0x75,0xD6,0x2C,0xFD,0xAC,0x44,0xA0,0x14,0x46,0xA8,0x70,0xA7,0xD0,0xE8,0xA6,0x36,0xE4,0x2A,0x03,0x83,0xC0,0x57,0x1B,0xB3
	,0x79,0x15,0xF8,0x3F,0x28,0xD1,0xA3,0x2A,0xF2,0xED,0xB5,0xA9,0xB5,0x29,0x60,0xCE,0x69,0x8E,0x96,0x0C,0x89,0x9B,0xA9,0xF5,0xCF,0x24,0x93,0x17,0x94,0xE7,0x9F,0x08
	,0xEA,0x93,0x96,0xFB,0xE6,0x71,0x0D,0xAA,0xF8,0x4E,0x4D,0x61,0xB3,0x25,0x9B,0x7D,0xF8,0x25,0xAF,0x85,0xB0,0xC3,0x81,0x6C,0xDE,0x63,0x72,0x0E,0xA2,0xD7,0x37,0x1B
	,0x10,0xCC,0xAE,0xE0,0xD7,0xF1,0xC0,0x82,0x86,0xA6,0x3E,0x3B,0x1E,0xD0,0x4B,0x52,0x9D,0xE6,0xE7,0xB3,0x0D,0x1D,0x92,0x1B,0x7D,0x67,0xA6,0xFD,0x8C,0x31,0x78,0xF1
	,0x04,0x73,0x18,0x90,0x5C,0x90,0x27,0xCF,0xC4,0x27,0x43,0x4F,0x43,0x2C,0x11,0x0E,0x62,0x83,0xA4,0x35,0x0A,0x34,0x70,0xF8,0xF7,0xD6,0xBB,0x12,0xD1,0xD0,0x3B,0x37
	,0x64,0xDD,0xA4,0x50,0xB3,0x56,0xC8,0x28,0xE3,0x94,0xB9,0x52,0x8D,0x04,0xD6,0x19,0x63,0xCA,0xBA,0xDD,0x88,0x37,0xE5,0xF1,0xDD,0x51,0x37,0xB4,0x4F,0xDA,0x3A,0x65
	,0x57,0x44,0x51,0xA6,0xA0,0xDC,0xC4,0x7A,0xFE,0xFF,0xC8,0x24,0x11,0x02,0x9C,0x66,0x28,0x1D,0x37,0xB1,0x8A,0xED,0xA5,0xFE,0x81,0x78,0xF8,0x8A,0x2B,0xFF,0x79,0xA4
	,0x69,0xAB,0x80,0xFF,0x42,0xBB,0xD0,0xC9,0x27,0x19,0x51,0xE6,0xDE,0xBA,0x78,0x9A,0x17,0x48,0xB4,0x9B,0x91,0xA7,0x8E,0x6C,0xA0,0x8F,0x9D,0x9D,0x66,0x8E,0xA2,0xCA
	,0xFD,0x30,0x97,0x78,0xC9,0xBE,0x53,0x01,0x86,0xA8,0x11,0x28,0x9E,0xC9,0x54,0x88,0xB4,0x3F,0x39,0xA2,0x7B,0xD8,0xEA,0xA9,0x8F,0x2C,0x4A,0xBB,0x3E,0x99,0x14,0x2F
	,0xCD,0x70,0xAE,0xB6,0x8E,0xDB,0x76,0x46,0x97,0x21,0x9F,0x49,0x26,0x3F,0x9A,0x6C,0x64,0xA4,0xCA,0xF4,0x2C,0xCC,0xDA,0xE1,0x97,0xD4,0x8C,0x4D,0x52,0x59,0x36,0x46
	,0x2D,0x92,0x3A,0x1D,0x98,0x1C,0x4C,0x83,0x3B,0xC6,0x75,0x57,0x4C,0x0E,0x01,0x89,0x77,0xA7,0xCF,0x1F,0x09,0x1A,0x6A,0x80,0x8D,0x3A,0x89,0xF3,0xAF,0x15,0x0C,0x36
	,0x99,0x47,0xDF,0x50,0x20,0x4E,0xDA,0x03,0x60,0x38,0x25,0x7C,0xD7,0xD4,0x9B,0xF5,0x55,0x68,0xF9,0x0D,0xCD,0x9E,0x49,0x91,0xAF,0x67,0xE8,0x4E,0x43,0xBC,0x45,0xE6
	,0x98,0xB2,0x30,0x7C,0x34,0x25,0x27,0x4A,0xD7,0x97,0xC9,0x61,0xBE,0x1B,0x41,0x96,0xBA,0xE7,0x30,0xB7,0x46,0x7B,0x41,0x74,0x34,0x58,0xA9,0xEE,0x0E,0x8B,0x59,0x9F
	,0xA3,0xD6,0x29,0xEC,0xDC,0xBE,0xDE,0xB3,0x40,0xD5,0xB9,0x92,0x64,0x37,0x40,0x7B,0xE8,0xC8,0xF1,0xDD,0x83,0x33,0xC5,0xB4,0x8A,0x88,0x43,0x20,0xF5,0xA8,0xC3,0x44
	,0xDE,0xE7,0xE5,0x4D,0x4D,0xA4,0xF6,0xEF,0x8C,0x0A,0x07,0xD3,0xB6,0x88,0xCE,0x19,0xDF,0x71,0xAB,0xBB,0xD8,0x80,0xA0,0x0B,0xC4,0xE3,0x4F,0x22,0xB8,0x9E,0xE0,0xB6
	,0x9A,0x73,0xE6,0xA3,0xF5,0xF9,0xBD,0xB8,0x75,0x4D,0x7E,0xBC,0xF7,0xF1,0xD6,0xC9,0x7B,0x70,0xC2,0xD7,0xA0,0x3D,0xD1,0x43,0x53,0xB8,0xE2,0x9D,0x42,0x85,0xBD,0xC5
	,0xCB,0xE3,0xDA,0xB5,0xA0,0x87,0x14,0xF7,0xF9,0xB6,0x3E,0xCE,0xE2,0x25,0x80,0x89,0x5F,0x2C,0xB0,0x72,0x5B,0x22,0x8F,0xEA,0xA9,0xC7,0x1A,0x80,0x17,0x11,0xD8,0xB3
	,0xBE,0x55,0xA1,0xBF,0xCA,0x8E,0x02,0x43,0x96,0xD2,0x17,0x9B,0x2D,0x49,0x3B,0x1E,0xF4,0xE9,0x9B,0x3C,0x23,0x05,0xEC,0x91,0xDE,0xB6,0x5F,0x34,0x1F,0x62,0x94,0x0E
	,0x44,0x77,0xB7,0x2D,0x59,0x61,0x38,0x16,0x98,0x2C,0xB8,0x95,0x3C,0xBB,0x89,0x13,0xD8,0xFC,0x2B,0x99,0x24,0xA3,0xE6,0x35,0x2A,0xA1,0xA7,0x19,0xDB,0x01,0x06,0xEB
	,0x1B,0xCB,0x7B,0x6A,0x61,0x56,0xA7,0xCA,0xF7,0xD2,0xB5,0xE0,0x1A,0xCA,0xC3,0xE4,0x0C,0x8A,0xD3,0xCD,0xBB,0x70,0x12,0xAE,0x96,0xA3,0x10,0x2C,0x67,0x59,0xA3,0xF8
	,0x76,0x7C,0x4D,0x52,0xC6,0x54,0xAB,0x20,0xCE,0x66,0x7F,0x20,0x9E,0x5F,0x17,0x2B,0x1C,0x15,0xE6,0xA0,0x1B,0x27,0xAF,0x67,0xC2,0xE1,0x7D,0x1F,0x9A,0xB6,0x68,0x27
	,0x76,0xA1,0xD9,0x82,0x1B,0xC8,0xE8,0x9F,0x1A,0xB1,0x28,0xC1,0x7D,0xDD,0x37,0xD4,0x2C,0xCC,0xA5,0x1B,0x86,0xE0,0x68,0x93,0xDE,0x32,0x20,0xC8,0xA4,0x80,0xD1,0x21
	,0x4B,0x70,0x0D,0x03,0xD7,0x70,0xB1,0x55,0x07,0xB8,0xEA,0xE8,0x86,0x01,0x8C,0x01,0x98,0x33,0x32,0x97,0x2D,0xE7,0xF6,0xDF,0x67,0x7B,0xEB,0xBA,0x5B,0x83,0xBA,0x91
	,0x3E,0x66,0xC4,0x2A,0xFB,0x4D,0x69,0x8A,0x2E,0x19,0x6F,0x20,0x1A,0xC1,0x17,0x32,0xD1,0x02,0xD0,0x90,0x28,0x3A,0x1F,0x95,0xAA,0x39,0x5F,0x2F,0xB6,0x2F,0x84,0x28
	,0x47,0x2C,0x57,0x0C,0xB0,0xCA,0xB6,0x52,0xFC,0x1C,0x5D,0x29,0x70,0x2A,0xDD,0x6B,0x1A,0x16,0x56,0xD6,0x3C,0x73,0xF3,0x44,0xDF,0x09,0xF9,0xAF,0xC6,0x39,0xE4,0x8D
	,0xBA,0xC8,0xE8,0x7B,0x19,0xB0,0x0B,0x01,0x40,0x5A,0x72,0xD9,0x5A,0x7C,0xFC,0x40,0x0B,0xD5,0x8E,0xAD,0x54,0x68,0x9A,0xBF,0xA6,0x49,0xA9,0xCC,0x29,0x7B,0x98,0xEB
	,0x20,0x67,0xF3,0x16,0xD0,0xEC,0x81,0x44,0xFD,0x88,0xF8,0x85,0x4F,0x42,0xEE,0xAC,0xC4,0x7C,0xAB,0x19,0xAA,0x4D,0x27,0x35,0x1A,0x56,0x3C,0x6F,0xFD,0xA4,0x97,0x81
	,0x94,0xA3,0x12,0xA2,0xD0,0x93,0x3B,0xA2
};

#pragma mark -
#pragma mark Methods

//int __usercall sub_709330<eax>(uint32_t *result<eax>, uint32_t *a2<esi>)
void CTRCrypt2::sub_709330(uint32_t *result, uint32_t *a2)
{
	uint32_t v2; // edx@1
	uint32_t v3; // ecx@1
	uint32_t v4; // edx@1
	uint32_t v5; // ecx@1
	uint32_t v6; // edi@1
	int v7; // edx@1
	
	v2 = *result ^ *a2;
	v3 = *(a2 + 1) ^ *(result + 1) ^ (result[(_BYTE)v2 + 774]
									  + (result[BYTE1(v2) + 518] ^ (result[(v2 >> 24) + 6]
																	+ result[((v2 >> 16) & 0xFF) + 262])));
	v4 = *(result + 2) ^ (result[(_BYTE)v3 + 774]
						  + (result[BYTE1(v3) + 518] ^ (result[(v3 >> 24) + 6] + result[((v3 >> 16) & 0xFF) + 262]))) ^ v2;
	v5 = *(result + 3) ^ (result[(_BYTE)v4 + 774]
						  + (result[BYTE1(v4) + 518] ^ (result[(v4 >> 24) + 6] + result[((v4 >> 16) & 0xFF) + 262]))) ^ v3;
	v6 = v4 ^ *(result + 4) ^ (result[(_BYTE)v5 + 774]
							   + (result[BYTE1(v5) + 518] ^ (result[(v5 >> 24) + 6] + result[((v5 >> 16) & 0xFF) + 262])));
	v7 = *(result + 5);
	*(a2 + 1) = v6;
	*a2 = v5 ^ v7;
	//return (int)result;
}

//int __usercall sub_708C60<eax>(uint8_t *input<eax>, uint8_t *output)
void CTRCrypt2::Copy_708C60(uint8_t *input, uint8_t *output)
{
	int v2; // eax@1
	int v3; // ecx@1
	void *v4; // ebx@1
	uint8_t *v5; // edi@1
	int v6; // esi@1
	int v7; // eax@2
	int v8; // edx@2
	int v9; // eax@4
	int v10; // edx@4
	int v11; // eax@6
	int v12; // edx@6
	int v13; // eax@8
	int v14; // edx@8
	int v15; // eax@10
	int v16; // edx@10
	int v17; // eax@12
	int v18; // edx@12
	int v19; // eax@14
	int v20; // edx@14
	int v21; // eax@16
	int v22; // edx@16
	int v23; // eax@18
	int v24; // edx@18
	int v25; // eax@20
	int v26; // edx@20
	int v27; // eax@22
	int v28; // edx@22
	int v29; // edx@24
	signed int v30; // edi@27
	signed int v31; // edi@29
	int result; // eax@30
	int v33; // ebp@4
	int v34; // ebp@6
	int v35; // ebp@8
	int v36; // ebp@22
	int v37; // ebp@24
	int v39; // ecx@28
	uint32_t a2[2]; // [sp+Ch] [bp-8h]@27
						//int v41; // [sp+10h] [bp-4h]@27
	
	v4 = output;
	v5 = input;
	memset(output, 0, 0x1018u);
	memcpy(v4, UnknownCryptTable1_BAE6D0, 0x1018u);
	v2 = (int)(long)v5;
	v3 = (int)(long)(v5 + 8);
	v6 = (int)(long)((char *)v4 + 8);
	output = (uint8_t *)2;
	do
	{
		v8 = *(_BYTE *)v2;
		v7 = v2 + 1;
		if ( v7 >= (uint32_t)v3 )
			v7 = (int)(long)v5;
		v33 = *(_BYTE *)v7;
		v9 = v7 + 1;
		v10 = v33 | (v8 << 8);
		if ( v9 >= (uint32_t)v3 )
			v9 = (int)(long)v5;
		v34 = *(_BYTE *)v9;
		v11 = v9 + 1;
		v12 = v34 | (v10 << 8);
		if ( v11 >= (uint32_t)v3 )
			v11 = (int)(long)v5;
		v35 = *(_BYTE *)v11;
		v13 = v11 + 1;
		v14 = v35 | (v12 << 8);
		if ( v13 >= (uint32_t)v3 )
			v13 = (int)(long)v5;
		*(_DWORD *)(v6 - 8) ^= v14;
		v16 = *(_BYTE *)v13;
		v15 = v13 + 1;
		if ( v15 >= (uint32_t)v3 )
			v15 = (int)(long)v5;
		v18 = *(_BYTE *)v15 | (v16 << 8);
		v17 = v15 + 1;
		if ( v17 >= (uint32_t)v3 )
			v17 = (int)(long)v5;
		v20 = *(_BYTE *)v17 | (v18 << 8);
		v19 = v17 + 1;
		if ( v19 >= (uint32_t)v3 )
			v19 = (int)(long)v5;
		v22 = *(_BYTE *)v19 | (v20 << 8);
		v21 = v19 + 1;
		if ( v21 >= (uint32_t)v3 )
			v21 = (int)(long)v5;
		*(_DWORD *)(v6 - 4) ^= v22;
		v24 = *(_BYTE *)v21;
		v23 = v21 + 1;
		if ( v23 >= (uint32_t)v3 )
			v23 = (int)(long)v5;
		v26 = *(_BYTE *)v23 | (v24 << 8);
		v25 = v23 + 1;
		if ( v25 >= (uint32_t)v3 )
			v25 = (int)(long)v5;
		v36 = *(_BYTE *)v25;
		v27 = v25 + 1;
		v28 = v36 | (v26 << 8);
		if ( v27 >= (uint32_t)v3 )
			v27 = (int)(long)v5;
		v37 = *(_BYTE *)v27;
		v2 = v27 + 1;
		v29 = v37 | (v28 << 8);
		if ( v2 >= (uint32_t)v3 )
			v2 = (int)(long)v5;
		*(_DWORD *)v6 ^= v29;
		v6 += 12;
	}
	while ( output-- != (uint8_t *)1 );
	a2[0] = 0;
	a2[1] = 0;
	v30 = 0;
	do
	{
		sub_709330((uint32_t *)v4, a2);
		*((_DWORD *)v4 + v30) = a2[0];
		*((_DWORD *)v4 + v30 + 1) = a2[1];
		v30 += 2;
	}
	while ( v30 < 6 );
	v31 = 0;
	do
	{
		sub_709330((uint32_t *)v4, a2);
		*((_DWORD *)v4 + v31 + 6) = a2[0];
		*((_DWORD *)v4 + v31 + 7) = a2[1];
		v31 += 2;
	}
	while ( v31 < 1024 );
	
}


void CTRCrypt2::BuildDecryptorTableByK(uint8_t *in, uint32_t out)
{
	Copy_708C60((uint8_t*)in, (uint8_t*)out);
}

int CTRCrypt2::SwitchEndianInt(int Value)
{
	__asm
	{
		MOV EAX, Value	
		BSWAP EAX
		MOV Value, EAX
	}
	return Value;
}		

void CTRCrypt2::__Tabula_Decrypt2(uint32_t *result, uint32_t *a2, uint32_t *X, uint32_t *Y) //EAX(DecryptorTable), ESI(Endian-reversed Data) - This fully works
{
	//Switch endian first
	a2[0] = SwitchEndianInt(a2[0]);
	a2[1] = SwitchEndianInt(a2[1]);
	
	//Store new XOR
	uint32_t X2 = a2[0];
	uint32_t Y2 = a2[1];
	
	uint32_t v2; // edx@1
	uint32_t v3; // ecx@1
	uint32_t v4; // edx@1
	uint32_t v5; // ecx@1
	uint32_t v6; // edi@1
	uint32_t v7; // edx@1
	
	v2 = *a2 ^ *(result + 5);
	v3 = *(a2 + 1) ^ *(result + 4) ^ (result[(uint8_t)v2 + 774]
									  + (result[BYTE1(v2) + 518] ^ (result[(v2 >> 24) + 6]
																	+ result[((v2 >> 16) & 0xFF) + 262])));
	v4 = *(result + 3) ^ (result[(uint8_t)v3 + 774]
						  + (result[BYTE1(v3) + 518] ^ (result[(v3 >> 24) + 6] + result[((v3 >> 16) & 0xFF) + 262]))) ^ v2;
	v5 = *(result + 2) ^ (result[(uint8_t)v4 + 774]
						  + (result[BYTE1(v4) + 518] ^ (result[(v4 >> 24) + 6] + result[((v4 >> 16) & 0xFF) + 262]))) ^ v3;
	v6 = v4 ^ *(result + 1) ^ (result[(uint8_t)v5 + 774]
							   + (result[BYTE1(v5) + 518] ^ (result[(v5 >> 24) + 6] + result[((v5 >> 16) & 0xFF) + 262])));
	v7 = *result;
	*(a2 + 1) = v6;
	*a2 = v5 ^ v7;
	
	//XOR now 
	//__debugbreak(); //Check this...
	a2[0] ^= *X;
	a2[1] ^= *Y;
	//Update XOR
	*X = X2;
	*Y = Y2;
	//Switch endian now
	a2[0] = SwitchEndianInt(a2[0]);
	a2[1] = SwitchEndianInt(a2[1]);
}


void CTRCrypt2::__Tabula_Encrypt2(uint32_t *result, uint32_t *a2, uint32_t *X, uint32_t *Y) //EAX(DecryptorTable), ESI(Endian-reversed Data) - This fully works
{
	//printf("X: %08X Y: %08X\n", *X, *Y);
	//Switch endian now
	a2[0] = SwitchEndianInt(a2[0]);
	a2[1] = SwitchEndianInt(a2[1]);
	//XOR first
	a2[0] ^= *X; //SwitchEndianInt(result[(0x1018)/4]);
	a2[1] ^= *Y;//SwitchEndianInt(result[(0x101C)/4]);
				//Do main encryption
	
	
	uint32_t v2; // edx@1
	uint32_t v3; // ecx@1
	uint32_t v4; // edx@1
	uint32_t v5; // ecx@1
	uint32_t v6; // edi@1
	uint32_t v7; // edx@1
	
	v2 = *result ^ *a2;
	v3 = *(a2 + 1) ^ *(result + 1) ^ (result[(uint8_t)v2 + 774]
									  + (result[BYTE1(v2) + 518] ^ (result[(v2 >> 24) + 6]
																	+ result[((v2 >> 16) & 0xFF) + 262])));
	v4 = *(result + 2) ^ (result[(uint8_t)v3 + 774]
						  + (result[BYTE1(v3) + 518] ^ (result[(v3 >> 24) + 6] + result[((v3 >> 16) & 0xFF) + 262]))) ^ v2;
	v5 = *(result + 3) ^ (result[(uint8_t)v4 + 774]
						  + (result[BYTE1(v4) + 518] ^ (result[(v4 >> 24) + 6] + result[((v4 >> 16) & 0xFF) + 262]))) ^ v3;
	v6 = v4 ^ *(result + 4) ^ (result[(uint8_t)v5 + 774]
							   + (result[BYTE1(v5) + 518] ^ (result[(v5 >> 24) + 6] + result[((v5 >> 16) & 0xFF) + 262])));
	v7 = *(result + 5);
	*(a2 + 1) = v6;
	*a2 = v5 ^ v7;
	
	//Store new XOR
	*X = a2[0];
	*Y = a2[1];
	
	//Switch endian at last
	a2[0] = SwitchEndianInt(a2[0]);
	a2[1] = SwitchEndianInt(a2[1]);
	
}
//K must have a size of 0x40(64) bytes!
void CTRCrypt2::Tabula_CryptInit2(TABULACRYPT2 *tbc2, uint8_t *InputK)
{
	BuildDecryptorTableByK(InputK, (uint32_t)(long)tbc2->CryptBlock); //Note: We are giving pointer as second parameter, the type is just wrong
	MD5 md5 = MD5();
	md5.update( InputK, 0x40 );
	md5.finalize();
	//md5_state_t md5s;
	//md5_init(&md5s);
	//md5_append(&md5s, InputK, 0x40),
	//md5_finish(&md5s, tbc2->CryptBlock + 0x1018);
	memcpy((void*)tbc2->K, (void*)InputK, 0x40);
}



void CTRCrypt2::Tabula_Encrypt2(TABULACRYPT2 *tbc2, uint32_t *PacketData, uint32_t Len)
{
	if( Len & 7 )
		__debugbreak(); //Not possible!
	
	uint32_t X = SwitchEndianInt(((uint32_t*)tbc2->CryptBlock)[(0x1018)/4]);
	uint32_t Y = SwitchEndianInt(((uint32_t*)tbc2->CryptBlock)[(0x101C)/4]);
	for(uint32_t i=0; i<(Len/8); i++)
		__Tabula_Encrypt2((uint32_t*)tbc2->CryptBlock, PacketData + i*2, &X, &Y);
}

void CTRCrypt2::Tabula_Decrypt2(TABULACRYPT2 *tbc2, uint32_t *PacketData, uint32_t Len)
{
	//if( Len & 7 )
	//	__debugbreak(); //Not possible!
	uint32_t X = SwitchEndianInt(((uint32_t*)tbc2->CryptBlock)[(0x1018)/4]);
	uint32_t Y = SwitchEndianInt(((uint32_t*)tbc2->CryptBlock)[(0x101C)/4]);
	for(uint32_t i=0; i<(Len/8); i++)
		__Tabula_Decrypt2((uint32_t*)tbc2->CryptBlock, PacketData + i*2, &X, &Y);
}
